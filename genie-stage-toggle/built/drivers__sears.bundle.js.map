{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/sears/_base.js","webpack:///./src/inject/drivers/sears/index.js","webpack:///./src/inject/drivers/sears/kmart.com.js","webpack:///./src/inject/drivers/sears/sears.com.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","extractElement","DOM","elemToFloat","Driver","constructor","merchantDomain","TOTAL_SELECTOR","EMPTY_CART_SELECTOR","PROMO_INPUT_SELECTOR","PROTOCOL","window","location","protocol","BASE_URL","BASE_API_URL","IS_GET_MERCHANT_CODES_METHOD","GET_CODE_REQUEST_URL","MERCHANT_CODES_ELEMENT_REGEX","MERCHANT_CODE_REGEX","correctURL","href","endsWith","emptyCart","codeInput","showPopup","fetch","response","text","responseHTML","Set","filter","item","map","_getCartSummary","responseJSON","ordSummary","couponSavings","Object","values","elem","promoTitle","length","_removeCode","_parseTotal","originalPrice","each","code","result","finalPrice","finalDiscount","_applyCode","_manageCode","endpoint","credentials","body","JSON","stringify","couponRequest","couponCode","headers","json","objJSON","merchTotal","kmart","sears","getCookie","setCookie","wait","browserUtils","DriverTemplate","MERCHANT_CODE_SELECTOR","MERCHANT_CODE_MAIN_PAGE_SELECTOR","MERCHANT_CODE_PROMO_PAGE_SELECTOR","PROMO_CODE_SELECTOR","MERCHANT_CODE_REGEXP","PRICES_SELECTOR","PRICE_SELECTOR","DISABLE_TIME_MS","merchantCode","querySelectorAll","el","isNotMaxCodeTesting","dataExpired","lastTestTimestamp","codeTestingCount","merchantCodes","push","mainPage","_getPage","Boolean","iframeElem","createElement","src","assign","style","display","documentElement","appendChild","getCodeElem","contentDocument","donationEl","_findElement","donation","targetString","targetEl","find","includes","url","name","isSinglePageApp","maxCoupons","DOMAIN","ITEM_CONTAINER_SELECTOR","DONATION_SELECTOR","MERCHANT_HOT_DEALS_REGEX","MERCHANT_CODE_SELECTOR_CART","URL_ID_REGEX","APP_ID_REGEX","AUTH_ID_REGEX","iframeElemDealGrid","isFrameLoaded","dealGridPageCodes","iframeElem–°ouponGrid","offerCodeInfo","couponGridPageCodes","couponDetail","parse","urlID","_getID","offerCode","offerSource","merchantCodeResponse","_getCouponCode","codesFromPage","itemEl","reduce","cur","prev","_getIDResponse","_parseIDs","authID","appID"],"mappings":"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","file":"drivers__sears.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport bus from '../../bus';\nimport BaseDriver from '../base';\nimport { format, log, DOM } from '../../../utils';\n\nconst { extractElement } = DOM;\nconst { elemToFloat, toFloat } = format;\n\nexport default class Driver extends BaseDriver {\n\tconstructor(merchantDomain) {\n\t\tsuper();\n\t\tthis.merchantDomain = merchantDomain;\n\t\tthis.TOTAL_SELECTOR = '.est-total strong[ng-bind-html^=\"itemsSubtotal\"]';\n\t\tthis.EMPTY_CART_SELECTOR = '.empty-cart';\n\t\tthis.PROMO_INPUT_SELECTOR = '#focusPromoInput';\n\t\tthis.PROTOCOL = window.location.protocol;\n\t\tthis.BASE_URL = `${this.PROTOCOL}//www.${this.merchantDomain}/`;\n\t\tthis.BASE_API_URL = `${this.BASE_URL}crsp/api/cart/v1`;\n\n\t\tthis.IS_GET_MERCHANT_CODES_METHOD = false;\n\t\tthis.GET_CODE_REQUEST_URL = this.BASE_URL;\n\t\tthis.MERCHANT_CODES_ELEMENT_REGEX = '.bootstraprow img';\n\t\tthis.MERCHANT_CODE_REGEX = /code[:]{0,1}\\s(\\w+)/i;\n\t}\n\n\tcheckCondition() {\n\t\tconst correctURL = window.location.href.endsWith('crsp/mx/cart#/cart');\n\t\tconst emptyCart = document.querySelector(this.EMPTY_CART_SELECTOR);\n\t\tconst codeInput = document.querySelector(this.PROMO_INPUT_SELECTOR);\n\t\tconst showPopup = !emptyCart && correctURL && codeInput;\n\t\treturn showPopup;\n\t}\n\n\tgetMerchantCodes() {\n\t\tif (this.IS_GET_MERCHANT_CODES_METHOD) {\n\t\t\treturn fetch(this.GET_CODE_REQUEST_URL, {\n\t\t\t\tmethod: 'GET',\n\t\t\t})\n\t\t\t\t.then(response => response.text())\n\t\t\t\t.then(responseHTML => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...new Set(\n\t\t\t\t\t\t\t[...extractElement(this.MERCHANT_CODES_ELEMENT_REGEX, responseHTML, true)]\n\t\t\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t\t\titem =>\n\t\t\t\t\t\t\t\t\t\titem.getAttribute('title') &&\n\t\t\t\t\t\t\t\t\t\titem.getAttribute('title').match(this.MERCHANT_CODE_REGEX),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.map(item => item.getAttribute('title').match(this.MERCHANT_CODE_REGEX)[1]),\n\t\t\t\t\t\t),\n\t\t\t\t\t];\n\t\t\t\t});\n\t\t}\n\t\treturn [];\n\t}\n\n\tgetExistingCodes() {\n\t\treturn this._getCartSummary().then(responseJSON => {\n\t\t\tconst response = responseJSON.response.ordSummary.couponSavings;\n\t\t\tconst codes = response ? Object.values(response).map(elem => elem.promoTitle) : [];\n\n\t\t\treturn {\n\t\t\t\tcodes,\n\t\t\t\tcodeCount: codes.length,\n\t\t\t};\n\t\t});\n\t}\n\n\tremoveCodes(codes) {\n\t\treturn this._removeCode(codes[0])\n\t\t\t.then(() => this._getCartSummary())\n\t\t\t.then(responseJSON => this._parseTotal(responseJSON));\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog(`Original price: ${originalPrice}`);\n\t\treturn Promise.each(codes, code => {\n\t\t\tconst result = {\n\t\t\t\tcode,\n\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\tfinalDiscount: 0,\n\t\t\t};\n\t\t\treturn this._applyCode(code)\n\t\t\t\t.then(() => this._getCartSummary())\n\t\t\t\t.then(responseJSON => {\n\t\t\t\t\tresult.finalPrice = this._parseTotal(responseJSON);\n\t\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\t\treturn this._removeCode(code).then(() => bus.$emit('code-checked', result));\n\t\t\t\t});\n\t\t});\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this._applyCode(codes[0]);\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\t// on the cart page we have price without tax and shipping\n\t\treturn this._getCartSummary().then(responseJSON => this._parseTotal(responseJSON));\n\t}\n\n\t_applyCode(code) {\n\t\treturn this._manageCode(code, 'add');\n\t}\n\n\t_removeCode(code) {\n\t\treturn this._manageCode(code, 'remove');\n\t}\n\n\t_manageCode(code, endpoint) {\n\t\treturn fetch(`${this.BASE_API_URL}/coupon/${endpoint}`, {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tcouponRequest: {\n\t\t\t\t\tcouponCode: code,\n\t\t\t\t},\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'X-Requested-With': 'XMLHttpRequest',\n\t\t\t},\n\t\t}).then(response => response.json());\n\t}\n\n\t_getCartSummary() {\n\t\treturn fetch(`${this.BASE_API_URL}/summary/view`, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.json());\n\t}\n\n\t_parseTotal(objJSON) {\n\t\tif (objJSON) {\n\t\t\treturn toFloat(objJSON.response.ordSummary.merchTotal);\n\t\t}\n\t\treturn elemToFloat(document.querySelector(this.TOTAL_SELECTOR));\n\t}\n}\n","import kmart from './kmart.com';\nimport sears from './sears.com';\n\nexport default [kmart, sears];\n","import DriverTemplate from './_base';\nimport { DOM, browserUtils, format } from '../../../utils';\nimport { backgroundMessaging } from '../../lib';\n\nconst { getCookie, setCookie, wait } = browserUtils;\nconst { elemToFloat } = format;\nconst { extractElement } = DOM;\n\n/**\nDriver behavior description:\n+ Existing code: yes\n+ Remove code: yes\n+ Stackable: no\n+ Free gift support: no\n+ Free shipping: no\n+ ‚ÄòisValid‚Äô implemented: no\n+ Codes can be replaced by another code: no\n+ Pages, where extension works: cart\n+ Is driver SPA: yes\n+ Gather codes on site pages: no\n+ Special case about the driver works.\n   - maxCoupons: 3 (driver counts codes)\n   - code testing allow 3 times per 20 min (due to blocking)\n */\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper('kmart.com');\n\t\tthis.BASE_URL = 'https://www.kmart.com/';\n\t\tthis.IS_GET_MERCHANT_CODES_METHOD = true;\n\t\tthis.MERCHANT_CODE_SELECTOR = '.multipleImageHero .obj5 a';\n\t\tthis.MERCHANT_CODE_MAIN_PAGE_SELECTOR = '.bx-click-to-copy';\n\t\tthis.MERCHANT_CODE_PROMO_PAGE_SELECTOR = '.offer .title-3';\n\t\tthis.PROMO_CODE_SELECTOR = '[data-title=\"ALL OFFER EXCLUSIONS\"] b';\n\t\tthis.MERCHANT_CODE_REGEXP = /code:? (\\w+)/i;\n\t\tthis.PRICES_SELECTOR = '.sci-product-info tr';\n\t\tthis.PRICE_SELECTOR = '.new-cart-item-sell-price span';\n\t\tthis.DISABLE_TIME_MS = 20 * 60 * 1000; // 20 minutes\n\t}\n\n\tasync checkCondition() {\n\t\tconst merchantCode = [\n\t\t\t...new Set([...document.querySelectorAll(this.MERCHANT_CODE_MAIN_PAGE_SELECTOR)].map(el => el.textContent)),\n\t\t];\n\t\tif (this.MERCHANT_CODE_MAIN_PAGE_SELECTOR && !getCookie('MerchantCode')) {\n\t\t\tsetCookie('MerchantCode', merchantCode, 60, 'kmart.com');\n\t\t}\n\n\t\tlet isNotMaxCodeTesting = true;\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(this.BASE_URL);\n\t\tif (driverStorage) {\n\t\t\tconst dataExpired = Date.now() - driverStorage.lastTestTimestamp >= this.DISABLE_TIME_MS;\n\t\t\tif (dataExpired) {\n\t\t\t\tbackgroundMessaging.deleteDriverStorage(this.BASE_URL);\n\t\t\t} else {\n\t\t\t\tisNotMaxCodeTesting = driverStorage.codeTestingCount < 3;\n\t\t\t}\n\t\t}\n\n\t\tconst correctURL = window.location.href.endsWith('crsp/mx/cart#/cart');\n\t\tconst emptyCart = document.querySelector(this.EMPTY_CART_SELECTOR);\n\t\tconst codeInput = document.querySelector(this.PROMO_INPUT_SELECTOR);\n\n\t\treturn !emptyCart && correctURL && codeInput && isNotMaxCodeTesting;\n\t}\n\n\tasync getMerchantCodes() {\n\t\tconst merchantCodes = [];\n\n\t\tmerchantCodes.push(getCookie('MerchantCode'));\n\n\t\tconst mainPage = await this._getPage(this.BASE_URL);\n\t\tmerchantCodes.push(\n\t\t\t...[...extractElement(this.MERCHANT_CODE_SELECTOR, mainPage, true)]\n\t\t\t\t.map(item => item.getAttribute('onclick').match(this.MERCHANT_CODE_REGEXP))\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(elem => elem[1]),\n\t\t);\n\t\tmerchantCodes.push(\n\t\t\t...[...extractElement(this.PROMO_CODE_SELECTOR, mainPage, true)]\n\t\t\t\t.map(item => item.textContent.match(this.MERCHANT_CODE_REGEXP))\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.map(elem => elem[1]),\n\t\t);\n\n\t\tconst iframeElem = document.createElement('iframe');\n\t\tiframeElem.src = `${this.BASE_URL}en_us/savings/coupons.html/couponGrid`;\n\t\tObject.assign(iframeElem.style, { display: 'none' });\n\t\tdocument.documentElement.appendChild(iframeElem);\n\t\tconst getCodeElem = () => {\n\t\t\tif (iframeElem && iframeElem.contentDocument) {\n\t\t\t\treturn [\n\t\t\t\t\t...new Set(\n\t\t\t\t\t\t[...iframeElem.contentDocument.querySelectorAll(this.MERCHANT_CODE_PROMO_PAGE_SELECTOR)].filter(\n\t\t\t\t\t\t\titem => item.textContent.match(this.MERCHANT_CODE_REGEXP),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t].length;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\tawait wait(getCodeElem, 30000, 300, true);\n\n\t\tif (getCodeElem()) {\n\t\t\tmerchantCodes.push(\n\t\t\t\t...[...iframeElem.contentDocument.querySelectorAll(this.MERCHANT_CODE_PROMO_PAGE_SELECTOR)]\n\t\t\t\t\t.filter(item => item.textContent.match(this.MERCHANT_CODE_REGEXP))\n\t\t\t\t\t.map(item => item.textContent.match(this.MERCHANT_CODE_REGEXP)[1]),\n\t\t\t);\n\t\t}\n\n\t\treturn [...new Set(merchantCodes.filter(Boolean))];\n\t}\n\n\tasync beforeApplyCodes() {\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(this.BASE_URL);\n\t\tconst codeTestingCount = driverStorage ? driverStorage.codeTestingCount : 0;\n\t\tbackgroundMessaging.setDriverStorage(this.BASE_URL, {\n\t\t\tcodeTestingCount: codeTestingCount + 1,\n\t\t\tlastTestTimestamp: Date.now(),\n\t\t});\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\tconst donationEl = this._findElement('Donation');\n\t\tconst donation = donationEl ? elemToFloat(donationEl) || 0 : 0;\n\t\t// on the cart page we have price without tax and shipping\n\t\treturn this._getCartSummary().then(responseJSON => this._parseTotal(responseJSON) - donation);\n\t}\n\n\t_findElement(targetString) {\n\t\tconst targetEl = [...document.querySelectorAll(this.PRICES_SELECTOR)].find(el =>\n\t\t\tel.textContent.includes(targetString),\n\t\t);\n\t\treturn targetEl ? targetEl.querySelector(this.PRICE_SELECTOR) : null;\n\t}\n\n\t_getPage(url) {\n\t\treturn fetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.text());\n\t}\n};\n\nexport default {\n\tname: 'Kmart',\n\tdomain: 'kmart.com',\n\tDriver,\n\tisSinglePageApp: true,\n\tmaxCoupons: 3,\n};\n","import DriverTemplate from './_base';\nimport { backgroundMessaging } from '../../lib';\nimport { format, browserUtils } from '../../../utils';\nimport { extractElement } from '../../../utils/DOM';\n\nconst { elemToFloat } = format;\nconst { wait } = browserUtils;\n\n/*\nDriver behavior description:\n+ Existing code: yes\n+ Remove code: yes\n+ Stackable: no\n+ Free gift support: no\n+ Free shipping: no\n+ ‚ÄòisValid‚Äô implemented: no\n+ Codes can be replaced by another code: no\n+ Pages, where extension works: cart\n+ Is driver SPA: yes\n+ Gather codes on site pages: yes, from coupon pages\n\t('https://www.sears.com/en_us/savings/coupons.html/couponGrid',\n\t'https://www.sears.com/deals/center/hot-deals.html/dealGrid'):\n  sometimes page loading take a lot of time, we wait to get coupon 20 sec\n+ MaxCoupons: 3 (driver counts codes)\n+ Can run codes testing 2 times then need to wait 60 min to the next codes testing\n */\n\nconst DOMAIN = 'sears.com';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper(DOMAIN);\n\t\tthis.IS_GET_MERCHANT_CODES_METHOD = true;\n\t\tthis.GET_CODE_REQUEST_URL = `${this.BASE_URL}home`;\n\t\tthis.DISABLE_TIME_MS = 60 * 60 * 1000; // 60 minutes\n\t\tthis.ITEM_CONTAINER_SELECTOR = '[timetrack=\"Cart Items\"]';\n\t\tthis.DONATION_SELECTOR = '.item-desc[title*=\"Donation\"]';\n\t\tthis.PRICE_SELECTOR = '.new-cart-item-sell-price';\n\n\t\tthis.MERCHANT_CODE_REGEX = /\"cso\":\"(\\w+\\d+)/i;\n\t\tthis.MERCHANT_HOT_DEALS_REGEX = /code: (\\w+)/i;\n\t\tthis.MERCHANT_CODE_SELECTOR = '[coupon], .api-card.card.deals-card li[message-deals] .ng-binding';\n\t\tthis.MERCHANT_CODE_SELECTOR_CART = '.bx-click-to-copy';\n\n\t\tthis.URL_ID_REGEX = /dealsComponent\\/clientlibs.min.([a-zA-Z0-9_=-]+)/;\n\t\tthis.APP_ID_REGEX = /appID=(\\w+)/;\n\t\tthis.AUTH_ID_REGEX = /authID=(\\w+)/;\n\t}\n\n\tasync checkCondition() {\n\t\tlet isNotMaxCodeTesting = true;\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(DOMAIN);\n\t\tif (driverStorage) {\n\t\t\tconst dataExpired = Date.now() - driverStorage.lastTestTimestamp >= this.DISABLE_TIME_MS;\n\t\t\tif (dataExpired) {\n\t\t\t\tbackgroundMessaging.deleteDriverStorage(DOMAIN);\n\t\t\t} else {\n\t\t\t\tisNotMaxCodeTesting = driverStorage.codeTestingCount < 2;\n\t\t\t}\n\t\t}\n\t\treturn super.checkCondition() && isNotMaxCodeTesting;\n\t}\n\n\tasync getMerchantCodes() {\n\t\tconst iframeElemDealGrid = document.createElement('iframe');\n\t\tiframeElemDealGrid.src = `https://www.${DOMAIN}/deals/center/hot-deals.html/dealGrid/`;\n\t\tObject.assign(iframeElemDealGrid.style, { display: 'none' });\n\t\tdocument.documentElement.appendChild(iframeElemDealGrid);\n\t\tconst isFrameLoaded = () => iframeElemDealGrid.contentDocument.querySelector(this.MERCHANT_CODE_SELECTOR);\n\t\tawait wait(isFrameLoaded, 20000, 300, true);\n\t\tconst dealGridPageCodes = [...iframeElemDealGrid.contentDocument.querySelectorAll(this.MERCHANT_CODE_SELECTOR)]\n\t\t\t.map(el => el.textContent.match(this.MERCHANT_HOT_DEALS_REGEX))\n\t\t\t.filter(Boolean)\n\t\t\t.map(el => el[1]);\n\n\t\tconst iframeElem–°ouponGrid = document.createElement('iframe');\n\t\tiframeElem–°ouponGrid.src = `https://www.${DOMAIN}/en_us/savings/coupons.html/couponGrid`;\n\t\tObject.assign(iframeElem–°ouponGrid.style, { display: 'none' });\n\t\tdocument.documentElement.appendChild(iframeElem–°ouponGrid);\n\t\t// to get coupon code need offer code\n\t\tconst offerCodeInfo = () =>\n\t\t\tiframeElem–°ouponGrid.contentDocument.querySelector(this.MERCHANT_CODE_SELECTOR) &&\n\t\t\tiframeElem–°ouponGrid.contentDocument.querySelector(this.MERCHANT_CODE_SELECTOR).getAttribute('coupon');\n\t\t// page loading take a long time\n\t\tawait wait(offerCodeInfo, 20000, 300, true);\n\n\t\tlet couponGridPageCodes = [];\n\n\t\tif (offerCodeInfo()) {\n\t\t\tconst couponDetail = JSON.parse(offerCodeInfo());\n\t\t\tconst urlID = this._getID(iframeElem–°ouponGrid.contentDocument, this.URL_ID_REGEX);\n\t\t\tconst { offerCode, offerSource } = couponDetail;\n\t\t\tconst merchantCodeResponse = await this._getCouponCode(offerCode, offerSource, urlID);\n\t\t\tconst merchantCode = merchantCodeResponse.match(this.MERCHANT_CODE_REGEX);\n\t\t\tcouponGridPageCodes = [merchantCode && merchantCode[1]].filter(Boolean);\n\t\t}\n\n\t\tconst codesFromPage = extractElement(this.MERCHANT_CODE_SELECTOR_CART, null, true);\n\n\t\treturn [...new Set([...couponGridPageCodes, ...dealGridPageCodes, ...codesFromPage])].filter(\n\t\t\tcode => typeof code === 'string' && Boolean(code),\n\t\t);\n\t}\n\n\tgetExistingCodes() {\n\t\treturn this._getCartSummary().then(responseJSON => {\n\t\t\tconst response = responseJSON.response.ordSummary.couponSavings;\n\t\t\tconst codes = response\n\t\t\t\t? Object.values(response)\n\t\t\t\t\t\t.map(elem => elem.promoTitle)\n\t\t\t\t\t\t.filter(code => typeof code === 'string' && Boolean(code))\n\t\t\t\t: [];\n\n\t\t\treturn {\n\t\t\t\tcodes,\n\t\t\t\tcodeCount: codes.length,\n\t\t\t};\n\t\t});\n\t}\n\n\tasync beforeApplyCodes() {\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(DOMAIN);\n\t\tconst codeTestingCount = driverStorage ? driverStorage.codeTestingCount : 0;\n\t\tbackgroundMessaging.setDriverStorage(DOMAIN, {\n\t\t\tcodeTestingCount: codeTestingCount + 1,\n\t\t\tlastTestTimestamp: Date.now(),\n\t\t});\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\t// on the cart page we have price without tax and shipping, only with donation\n\t\treturn this._getCartSummary().then(responseJSON => {\n\t\t\tconst donation = [...document.querySelectorAll(this.ITEM_CONTAINER_SELECTOR)]\n\t\t\t\t.filter(itemEl => itemEl.querySelector(this.DONATION_SELECTOR))\n\t\t\t\t.map(donationEl => elemToFloat(donationEl.querySelector(this.PRICE_SELECTOR)))\n\t\t\t\t.reduce((cur, prev) => cur + prev, 0);\n\t\t\treturn this._parseTotal(responseJSON) - donation;\n\t\t});\n\t}\n\n\t_getID(response, regex) {\n\t\treturn [...response.querySelectorAll('script')]\n\t\t\t.filter(el => el.src.match(regex))\n\t\t\t.map(el => el.src.match(regex)[1])[0];\n\t}\n\n\t_getIDResponse(urlID) {\n\t\treturn fetch(`https://www.${DOMAIN}/etc/designs/shc/dealsComponent/clientlibs.min.${urlID}.js`, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.text());\n\t}\n\n\t_parseIDs(response) {\n\t\tconst authID = response.match(this.AUTH_ID_REGEX)[1];\n\t\tconst appID = response.match(this.APP_ID_REGEX)[1];\n\t\treturn { authID, appID };\n\t}\n\n\t_getCouponCode(offerCode, offerSource, urlID) {\n\t\treturn this._getIDResponse(urlID)\n\t\t\t.then(response => this._parseIDs(response))\n\t\t\t.then(({ authID, appID }) =>\n\t\t\t\tfetch(\n\t\t\t\t\t`https://api.${DOMAIN}/shcapi/v3/ecoupon/jsonp/generateCouponDetail?appID=${appID}&authID=${authID}&client=dc&action=generateCSO&offerCode=${offerCode}&offerSource=${offerSource}&channel=sears.com&callback=angular.callbacks._1`,\n\t\t\t\t).then(response => response.text()),\n\t\t\t);\n\t}\n};\n\nexport default {\n\tname: 'Sears',\n\tdomain: 'sears.com',\n\tDriver,\n\tisSinglePageApp: true,\n\tmaxCoupons: 3,\n};\n"],"sourceRoot":""}