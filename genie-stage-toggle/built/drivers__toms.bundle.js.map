{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/toms/_base.js","webpack:///./src/inject/drivers/toms/americanapparel.com.js","webpack:///./src/inject/drivers/toms/index.js","webpack:///./src/inject/drivers/toms/toms.ca.js","webpack:///./src/inject/drivers/toms/toms.com.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","elemToFloat","extractElementFromHTML","extractFormValues","DOM","INPUT_FIELD_SELECTOR","TomsDriver","constructor","TOTAL_SELECTOR","APPLIED_CODES_SELECTOR","APPLIED_CODES_REGEX","FORM_SELECTOR","bodyData","PARAMS_ACTION","querySelectorAll","map","el","innerText","length","_removeCode","responseText","_parseTotal","originalPrice","each","code","_applyCode","finalPrice","finalDiscount","window","history","pushState","state","title","location","href","split","params","set","delete","_manageCode","fetch","action","credentials","headers","Accept","body","response","text","data","extractElement","ON_CHECKOUT","includes","ON_CART","Driver","CHECKOUT_SECTION_SELECTOR","EMPTY_ELEMENT_SELECTOR","ERROR_CODE_SELECTOR","isPaymentSection","paymentSection","find","dataset","type","classList","contains","emptyElement","isEmptyCart","workingDiscounts","result","responseHTML","_codeAppliedCheck","push","discount","discounts","validationInfo","_getUpdatedCart","currentPrice","currentDiscount","errorEl","Boolean","total","name","stackable","isSinglePageApp","isOnCartUrl","americanapparel","tomsCa","tomsCom","wait","getCookie","setCookie","browserUtils","DISCOUNT_PAGE","MILITARY_DISCOUNT_PAGE","SESS_CONF_SELECTOR","LOCALE_SELECTOR","IFRAME_WITH_MERCHANT_CODE_SELECTOR","MERCHANT_CODE_SELECTOR","HEADER_MERCHANT_CODE_SELECTOR","MERCHANT_CODE_REGEXP","REMOVE_BUTTON_SELECTOR","CART_SECTION_SELECTOR","CART_EMPTY_SELECTOR","SIDEBAR_SELECTOR","sessionStorage","getItem","click","setItem","ACTIVE_POPUP_SELECTOR","BASE_URL","sessionTimer","initialize","actionInterval","timeout","iframeData","contentWindow","merchantCodes","filter","item","isOnPopupCart","cartSection","checkoutSection","host","startsWith","isCartSection","offsetParent","isCheckoutSection","isCartEmpty","isTotal","readyState","codesPageStr","codesPageMilitaryStr","merchantCodeFromPage","flat","sessConf","URLSearchParams","trim","isCodeInput","formError","isValid","_getOrderData","responseJSON","taxValue","order","tomsOrderDetailMap","taxTotal","shippingValue","shippingTotal","totalValue","orderTotal","json","toString","status"],"mappings":"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","file":"drivers__toms.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport BaseDriver from '../base';\nimport bus from '../../bus';\nimport { format, DOM } from '../../../utils';\n\nconst { elemToFloat } = format;\nconst { extractElementFromHTML, extractFormValues } = DOM;\n\nconst INPUT_FIELD_SELECTOR = '.promotion-code';\n\nexport default class TomsDriver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.TOTAL_SELECTOR = '.ln-amt.tot';\n\t\tthis.APPLIED_CODES_SELECTOR = '[class =\"ln-code\"]';\n\t\tthis.APPLIED_CODES_REGEX = /code\\s\\(([A_Za-z0-9]*)\\)/i;\n\n\t\tthis.FORM_SELECTOR = '#couponForm2';\n\t\tthis.bodyData = extractFormValues(this.FORM_SELECTOR);\n\n\t\tthis.PARAMS_ACTION = '/atg/store/order/purchase/CouponFormHandler.claimCoupon';\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [...document.querySelectorAll(this.APPLIED_CODES_SELECTOR)].map(\n\t\t\tel => el.innerText.match(this.APPLIED_CODES_REGEX)[1],\n\t\t);\n\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tremoveCodes() {\n\t\treturn this._removeCode().then(responseText => this._parseTotal(responseText));\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._applyCode(code).then(responseText => {\n\t\t\t\tconst finalPrice = this._parseTotal(responseText);\n\t\t\t\tconst finalDiscount = originalPrice - finalPrice;\n\t\t\t\treturn this._removeCode().then(() => {\n\t\t\t\t\tbus.$emit('code-checked', { code, finalPrice, finalDiscount });\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n\n\tapplyCodes(codes) {\n\t\t// We should replace browser current location with a ordinary cart URL,\n\t\t// otherwise when page will be reloaded our best code could be removed\n\t\t// On checkout page that won't happen\n\t\tif (document.querySelector(INPUT_FIELD_SELECTOR)) {\n\t\t\twindow.history.pushState(window.history.state, window.document.title, window.location.href.split('?')[0]);\n\t\t}\n\t\treturn this._applyCode(codes[0]);\n\t}\n\n\t_removeCode() {\n\t\tthis.bodyData.params.set(this.PARAMS_ACTION, 'Remove');\n\t\tthis.bodyData.params.delete('/atg/store/order/purchase/CouponFormHandler.couponCode');\n\t\treturn this._manageCode(this.bodyData);\n\t}\n\n\t_applyCode(code) {\n\t\tthis.bodyData.params.set(this.PARAMS_ACTION, 'Apply');\n\t\tthis.bodyData.params.set('/atg/store/order/purchase/CouponFormHandler.couponCode', code);\n\t\treturn this._manageCode(this.bodyData);\n\t}\n\n\t_manageCode(bodyData) {\n\t\treturn fetch(bodyData.action, {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t\tAccept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n\t\t\t},\n\t\t\tbody: bodyData.params,\n\t\t}).then(response => response.text());\n\t}\n\n\t_parseTotal(data) {\n\t\tlet totalElement = null;\n\t\tif (data) {\n\t\t\ttotalElement = extractElementFromHTML(data, this.TOTAL_SELECTOR);\n\t\t} else {\n\t\t\ttotalElement = document.querySelector(this.TOTAL_SELECTOR);\n\t\t}\n\t\treturn elemToFloat(totalElement);\n\t}\n}\n","import Promise from 'bluebird';\nimport TomsDriver from './_base';\nimport bus from '../../bus';\nimport { format, DOM, log } from '../../../utils';\n\nconst { toFloat } = format;\nconst { extractElement, extractFormValues } = DOM;\n\nconst ON_CHECKOUT = window.location.href.includes('/checkout');\nconst ON_CART = window.location.href.includes('/cart');\n\n/** Behavior description:\n * - can apply code\n * - can not remove codes\n * - valid code can not be replaced with another valid code\n * - can apply multiple codes\n *\n * getExistingCodes not necessary because we can't remove the codes\n * */\n\nconst Driver = class Driver extends TomsDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.TOTAL_SELECTOR = '#checkoutOrderPricing';\n\t\tthis.FORM_SELECTOR = '#promoCode';\n\t\tthis.CHECKOUT_SECTION_SELECTOR = '.checkoutSection';\n\t\tthis.EMPTY_ELEMENT_SELECTOR = '.cartHeader';\n\t\tthis.ERROR_CODE_SELECTOR = '.shoppingCartMessages, .error.couponFormError';\n\n\t\tthis.bodyData = extractFormValues(this.FORM_SELECTOR);\n\t}\n\n\tgetExistingCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\twatchForCartUrl() {\n\t\tlet previousState = false;\n\t\tsetInterval(() => {\n\t\t\tlet isPaymentSection = false;\n\t\t\tif (ON_CHECKOUT) {\n\t\t\t\tconst paymentSection = [...document.querySelectorAll(this.CHECKOUT_SECTION_SELECTOR)].find(\n\t\t\t\t\tel => el.dataset.type === 'payment',\n\t\t\t\t);\n\t\t\t\tisPaymentSection = paymentSection && paymentSection.classList.contains('expanded');\n\t\t\t}\n\t\t\tconst emptyElement = document.querySelector(this.EMPTY_ELEMENT_SELECTOR);\n\t\t\tconst isEmptyCart = emptyElement && emptyElement.innerText.match(/your cart is empty/gi);\n\n\t\t\tconst currentState = (ON_CART || (isPaymentSection && ON_CHECKOUT)) && !isEmptyCart;\n\n\t\t\tif (currentState !== previousState) {\n\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t}\n\t\t\tpreviousState = currentState;\n\t\t}, 1000);\n\t}\n\n\tcheckCodes(codes) {\n\t\tconst originalPrice = this._parseTotal();\n\n\t\tlog(`Original price: ${originalPrice}`);\n\n\t\tconst workingDiscounts = [];\n\n\t\treturn Promise.each(codes, code => {\n\t\t\tconst result = {\n\t\t\t\tcode,\n\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\tfinalDiscount: 0,\n\t\t\t};\n\t\t\treturn this._applyCode(code).then(responseHTML => {\n\t\t\t\tif (this._codeAppliedCheck(responseHTML)) {\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\n\t\t\t\tresult.finalPrice = this._parseTotal(responseHTML);\n\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\tif (result.finalPrice < originalPrice) {\n\t\t\t\t\tworkingDiscounts.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t});\n\t\t}).then(() =>\n\t\t\tbus.$emit('stack-codes', {\n\t\t\t\tcodes: workingDiscounts.map(discount => discount.code),\n\t\t\t\tdiscounts: workingDiscounts,\n\t\t\t\toriginalPrice,\n\t\t\t}),\n\t\t);\n\t}\n\n\tstackCodes(validationInfo) {\n\t\treturn this._getUpdatedCart().then(responseHTML => {\n\t\t\tconst currentPrice = this._parseTotal(responseHTML);\n\t\t\tconst currentDiscount = validationInfo.originalPrice - currentPrice;\n\t\t\treturn bus.$emit('stackable-complete', {\n\t\t\t\tcodes: validationInfo.discounts.map(discount => discount.code),\n\t\t\t\tfinalPrice: currentPrice,\n\t\t\t\tfinalDiscount: currentDiscount,\n\t\t\t});\n\t\t});\n\t}\n\n\t_codeAppliedCheck(data) {\n\t\tconst errorEl = extractElement(this.ERROR_CODE_SELECTOR, data);\n\t\treturn Boolean(errorEl && errorEl.innerText.match(/this coupon cannot be applied/));\n\t}\n\n\t_getUpdatedCart() {\n\t\treturn fetch(window.location.href, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.text());\n\t}\n\n\t_parseTotal(data) {\n\t\tconst totalElement = extractElement(this.TOTAL_SELECTOR, data);\n\t\treturn toFloat(totalElement.dataset.total);\n\t}\n};\n\nexport default {\n\tname: 'American Apparel',\n\tdomain: 'americanapparel.com',\n\tstackable: true,\n\tDriver,\n\tisSinglePageApp: true,\n\tisOnCartUrl() {\n\t\treturn false;\n\t},\n};\n","import americanapparel from './americanapparel.com';\nimport tomsCa from './toms.ca';\nimport tomsCom from './toms.com';\n\nexport default [americanapparel, tomsCa, tomsCom];\n","import TomsDriver from './_base';\n\nconst INPUT_FIELD_SELECTOR = '.promotion-code';\n\n// Behavior description:\n// we can apply only one code\n// we can`t replace a valid code with invalid one\n// we can remove code\n\nconst Driver = class Driver extends TomsDriver {};\n\nexport default {\n\tname: 'Toms Canadian',\n\tdomain: 'toms.ca',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\treturn href.includes('toms.ca/checkout') && document.querySelector(INPUT_FIELD_SELECTOR);\n\t},\n\t// we can`t go to the checkout page without any goods so isCartEmpty() doesn`t need\n};\n","import Promise from 'bluebird';\nimport TomsDriver from './_base';\nimport bus from '../../bus';\nimport { sessionTimer } from '../../lib';\nimport { format, DOM, browserUtils, log } from '../../../utils';\n\nconst { toFloat, elemToFloat } = format;\nconst { wait, getCookie, setCookie } = browserUtils;\nconst { extractElement } = DOM;\n\nconst INPUT_FIELD_SELECTOR = '#pcode-input, #co-pcode-input';\n\n// Driver behavior description:\n// • Existing code: yes\n// • Remove code: yes\n// • Stackable: no\n// • Free gift support: no\n// • ‘isValid’ implemented: yes\n// sessionTimer - 15 min\n// We support modal and checkout page. On the checkout user will be redirect to the 1 step, but all his info will be saved.\n\nconst Driver = class Driver extends TomsDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.DISCOUNT_PAGE = 'https://www.toms.com/education-discount';\n\t\tthis.MILITARY_DISCOUNT_PAGE = 'https://www.toms.com/military-discount';\n\t\tthis.TOTAL_SELECTOR = '#cart-slider #cart-tot, #co-cart-tot';\n\t\tthis.APPLIED_CODES_SELECTOR = '#cart-pcode span, #co-pcode-show p span';\n\n\t\tthis.SESS_CONF_SELECTOR = '[name=\"_dynSessConf\"]';\n\t\tthis.LOCALE_SELECTOR = '#locale';\n\t\tthis.IFRAME_WITH_MERCHANT_CODE_SELECTOR = '[id*=\"lightbox-iframe\"]';\n\t\tthis.MERCHANT_CODE_SELECTOR = '#text3_wrapper #text3, .banner_summary b';\n\t\tthis.HEADER_MERCHANT_CODE_SELECTOR = '#button10_wrapper #button10';\n\t\tthis.MERCHANT_CODE_REGEXP = /code: (\\w.+)/i;\n\n\t\tthis.REMOVE_BUTTON_SELECTOR = '#cart-pcode a, #co-pcode-show a';\n\t\tthis.CART_SECTION_SELECTOR = '#cart-closer.open';\n\t\tthis.CHECKOUT_SECTION_SELECTOR = '#co-pay-mthd, #co-pcode-cntr';\n\t\tthis.CART_EMPTY_SELECTOR = '#empty-cart-content';\n\n\t\tthis.SIDEBAR_SELECTOR = '#nav-cart-num';\n\t\tif (sessionStorage.getItem('genieOpenSidebar') === 'true') {\n\t\t\tdocument.querySelector(this.SIDEBAR_SELECTOR).click();\n\t\t\tsessionStorage.setItem('genieOpenSidebar', 'false');\n\t\t}\n\n\t\tthis.ACTIVE_POPUP_SELECTOR = '#cart-container.open';\n\n\t\tthis.BASE_URL = 'https://www.toms.com/services/order';\n\t}\n\n\twatchForCartUrl() {\n\t\tconst interval = super.watchForCartUrl();\n\t\tsessionTimer.initialize({ actionInterval: interval, timeout: 15 });\n\t}\n\n\tcheckCondition() {\n\t\tif (document.querySelector(this.IFRAME_WITH_MERCHANT_CODE_SELECTOR) && !getCookie('MerchantCode')) {\n\t\t\tconst iframeData = document.querySelector(this.IFRAME_WITH_MERCHANT_CODE_SELECTOR).contentWindow.document\n\t\t\t\t.body;\n\t\t\tconst merchantCodes = [...iframeData.querySelectorAll(this.MERCHANT_CODE_SELECTOR)]\n\t\t\t\t.map(el => el.textContent)\n\t\t\t\t.filter(Boolean);\n\n\t\t\tmerchantCodes.push(\n\t\t\t\t[...iframeData.querySelectorAll(this.HEADER_MERCHANT_CODE_SELECTOR)]\n\t\t\t\t\t.map(item => item.textContent.match(this.MERCHANT_CODE_REGEXP))\n\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t.map(el => el[1]),\n\t\t\t);\n\t\t\tsetCookie('MerchantCode', merchantCodes, 60, 'toms.com');\n\t\t}\n\n\t\tthis.isOnPopupCart = document.querySelector(this.ACTIVE_POPUP_SELECTOR);\n\n\t\tconst cartSection = document.querySelector(this.CART_SECTION_SELECTOR);\n\t\tconst checkoutSection = document.querySelector(this.CHECKOUT_SECTION_SELECTOR);\n\n\t\tconst domain = window.location.host.startsWith('www.toms.com');\n\n\t\tconst isCartSection = cartSection && cartSection.offsetParent;\n\t\tconst isCheckoutSection = checkoutSection ? checkoutSection.getAttribute('rel') === 'init' : false;\n\n\t\tconst isCartEmpty = document.querySelector(this.CART_EMPTY_SELECTOR);\n\n\t\tconst isTotal = document.querySelector(this.TOTAL_SELECTOR) && this._parseTotal();\n\n\t\treturn (\n\t\t\tdocument.readyState === 'complete' &&\n\t\t\tdomain &&\n\t\t\t!isCartEmpty &&\n\t\t\tisTotal &&\n\t\t\t((isCartSection && !checkoutSection) || (isCheckoutSection && !isCartSection))\n\t\t);\n\t}\n\n\tasync getMerchantCodes() {\n\t\tconst codesPageStr = await fetch(this.DISCOUNT_PAGE).then(response => response.text());\n\t\tconst codesPageMilitaryStr = await fetch(this.MILITARY_DISCOUNT_PAGE).then(response => response.text());\n\t\tconst merchantCodeFromPage = [\n\t\t\t...extractElement(this.MERCHANT_CODE_SELECTOR, codesPageStr, true),\n\t\t\t...extractElement(this.MERCHANT_CODE_SELECTOR, codesPageMilitaryStr, true),\n\t\t].map(el => el.textContent);\n\n\t\treturn [getCookie('MerchantCode'), merchantCodeFromPage].flat().filter(Boolean);\n\t}\n\n\tbeforeTestCodes() {\n\t\tthis.sessConf = document.querySelector(this.SESS_CONF_SELECTOR).value;\n\n\t\tthis.bodyData = {\n\t\t\taction: '',\n\t\t\tparams: new URLSearchParams(),\n\t\t};\n\t\tthis.bodyData.action = `${this.BASE_URL}/applyCoupon`;\n\t\tthis.bodyData.params.set('_dynSessConf', this.sessConf);\n\t\tthis.bodyData.params.set('locale', document.querySelector(this.LOCALE_SELECTOR).value);\n\t\treturn Promise.resolve();\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [...document.querySelectorAll(this.APPLIED_CODES_SELECTOR)]\n\t\t\t.filter(el => el.offsetParent)\n\t\t\t.map(el => el.textContent.trim());\n\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tremoveCodes() {\n\t\tconst isCodeInput = () =>\n\t\t\tdocument.querySelector(INPUT_FIELD_SELECTOR) && !document.querySelector(this.REMOVE_BUTTON_SELECTOR);\n\t\tdocument.querySelector(this.REMOVE_BUTTON_SELECTOR).click();\n\t\treturn wait(isCodeInput, 4000, 400, true).then(() => this._parseTotal());\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog(`Original price: ${originalPrice}`);\n\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._applyCode(code).then(responseText => {\n\t\t\t\tconst result = {\n\t\t\t\t\tcode,\n\t\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\t\tfinalDiscount: 0,\n\t\t\t\t};\n\t\t\t\tif (!responseText || responseText.formError) {\n\t\t\t\t\tresult.isValid = false;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\t\t\t\tresult.finalPrice = this._parseTotal(responseText);\n\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\treturn this._removeCode().then(() => bus.$emit('code-checked', result));\n\t\t\t}),\n\t\t);\n\t}\n\n\tbeforeApplyCodes() {\n\t\tif (this.isOnPopupCart) {\n\t\t\tsessionStorage.setItem('genieOpenSidebar', 'true');\n\t\t}\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this._applyCode(codes[0]);\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\t// Tax and shipping are included on cart and checkout pages\n\t\treturn this._getOrderData().then(responseJSON => {\n\t\t\tconst taxValue = toFloat(responseJSON.order.tomsOrderDetailMap.taxTotal);\n\t\t\tconst shippingValue = toFloat(responseJSON.order.shippingTotal);\n\t\t\tconst totalValue = toFloat(responseJSON.order.tomsOrderDetailMap.orderTotal);\n\t\t\treturn totalValue - taxValue - shippingValue;\n\t\t});\n\t}\n\n\t_getOrderData() {\n\t\treturn fetch(`${this.BASE_URL}/getOrder?_dynSessConf=${this.sessConf}&locale=en_US&_=${Date.now()}`, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.json());\n\t}\n\n\t_removeCode() {\n\t\tthis.bodyData.params.delete('couponClaimCode');\n\t\treturn this._manageCode();\n\t}\n\n\t_applyCode(code) {\n\t\tthis.bodyData.params.set('couponClaimCode', code);\n\t\treturn this._manageCode();\n\t}\n\n\t_manageCode() {\n\t\treturn fetch(`${this.bodyData.action}?${this.bodyData.params.toString()}`, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => (response.status === 200 ? response.json() : false));\n\t}\n\n\t_parseTotal(data) {\n\t\tif (data) {\n\t\t\treturn toFloat(data.order.tomsOrderDetailMap.orderTotal);\n\t\t}\n\t\treturn elemToFloat(document.querySelector(this.TOTAL_SELECTOR));\n\t}\n};\n\nexport default {\n\tname: 'Toms',\n\tdomain: 'toms.com',\n\tisSinglePageApp: true,\n\tDriver,\n\t// we can`t go to the checkout page without any goods so isCartEmpty() doesn`t need\n};\n"],"sourceRoot":""}