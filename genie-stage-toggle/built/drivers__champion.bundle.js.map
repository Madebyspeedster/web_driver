{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/champion/_base.js","webpack:///./src/inject/drivers/champion/champion.com.js","webpack:///./src/inject/drivers/champion/hanes.com.js","webpack:///./src/inject/drivers/champion/hanesink.com.js","webpack:///./src/inject/drivers/champion/index.js","webpack:///./src/inject/drivers/champion/justmysize.com.js","webpack:///./src/inject/drivers/champion/onehanesplace.com.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","elemToFloat","extractElementFromHTML","extractFormValues","DOM","ChampionDriver","constructor","FORM_SELECTOR","TOTAL_SELECTOR","APPLIED_CODE_SELECTOR","CART_URL","window","location","href","PARAMS_ACTION","PARAMS_CODE_NAME","REMOVE_CODE_URL","ERROR_CODE_TEXT","bodyData","action","replace","querySelectorAll","map","element","innerText","trim","length","each","code","_removeCode","_getUpdatedCart","responseText","_parseTotal","originalPrice","workingDiscounts","_applyCode","response","result","finalPrice","finalDiscount","isValid","includes","cartResponse","push","discount","discounts","validationInfo","sort","a","b","currentPrice","currentDiscount","successfulCodes","responseHTML","_manageCode","_sendRequest","url","paramAction","params","set","fetch","credentials","body","text","data","INPUT_CODE_FIELD_SELECTOR","Driver","name","stackable","isCartEmpty","isOnCartUrl","startsWith","Boolean","HanesDriver","FORM_DATA_SELECTOR","split","Hanesink","champion","hanes","hanesink","justmysize","onehanesplace","CODE_REGEXP","codesElem","find","elem"],"mappings":"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","file":"drivers__champion.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport BaseDriver from '../base';\nimport bus from '../../bus';\nimport { format, DOM, log } from '../../../utils';\n\nconst { elemToFloat } = format;\nconst { extractElementFromHTML, extractFormValues } = DOM;\n\nexport default class ChampionDriver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.FORM_SELECTOR = '#AutoPromotionCodeForm';\n\t\tthis.TOTAL_SELECTOR = '#WC_SingleShipmentOrderTotalsSummary_td_13';\n\t\tthis.APPLIED_CODE_SELECTOR = '.promotion_used__order-level *:first-child';\n\t\tthis.CART_URL = window.location.href;\n\t\tthis.PARAMS_ACTION = 'taskType';\n\t\tthis.PARAMS_CODE_NAME = 'promoCode';\n\t\tthis.REMOVE_CODE_URL = null;\n\t\tthis.ERROR_CODE_TEXT = 'errorCode';\n\t\tthis.bodyData = null;\n\t}\n\n\tbeforeTestCodes() {\n\t\tthis.bodyData = extractFormValues(this.FORM_SELECTOR);\n\t\tthis.REMOVE_CODE_URL = this.bodyData.action.replace('PromotionCodeApply', 'PromotionCodeRemove');\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [...document.querySelectorAll(this.APPLIED_CODE_SELECTOR)].map(element =>\n\t\t\telement.innerText.trim(),\n\t\t);\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tremoveCodes(codes) {\n\t\treturn Promise.each(codes, code => this._removeCode(code))\n\t\t\t.then(() => this._getUpdatedCart())\n\t\t\t.then(responseText => this._parseTotal(responseText));\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog(`Original price: ${originalPrice}`);\n\t\tconst workingDiscounts = [];\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._applyCode(code).then(response => {\n\t\t\t\tconst result = {\n\t\t\t\t\tcode,\n\t\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\t\tfinalDiscount: 0,\n\t\t\t\t\tisValid: true,\n\t\t\t\t};\n\t\t\t\tif (response.includes(this.ERROR_CODE_TEXT)) {\n\t\t\t\t\tresult.isValid = false;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\t\t\t\treturn this._getUpdatedCart().then(cartResponse => {\n\t\t\t\t\tresult.finalPrice = this._parseTotal(cartResponse);\n\t\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\t\tif (result.finalPrice < originalPrice) {\n\t\t\t\t\t\t// some codes can be applied, but related to shipping that I can't check on the cart\n\t\t\t\t\t\tworkingDiscounts.push(result);\n\t\t\t\t\t}\n\t\t\t\t\treturn this._removeCode(code).then(() => bus.$emit('code-checked', result));\n\t\t\t\t});\n\t\t\t}),\n\t\t).then(() =>\n\t\t\tbus.$emit('stack-codes', {\n\t\t\t\tcodes: workingDiscounts.map(discount => discount.code),\n\t\t\t\tdiscounts: workingDiscounts,\n\t\t\t\toriginalPrice,\n\t\t\t}),\n\t\t);\n\t}\n\n\tstackCodes(validationInfo) {\n\t\tconst workingDiscounts = validationInfo.discounts;\n\t\tconst { originalPrice } = validationInfo;\n\t\tworkingDiscounts.sort((a, b) => b.finalDiscount - a.finalDiscount);\n\t\tlet currentPrice = originalPrice;\n\t\tlet currentDiscount = 0;\n\t\tconst successfulCodes = [];\n\t\treturn Promise.each(workingDiscounts, discount =>\n\t\t\tthis._applyCode(discount.code)\n\t\t\t\t.then(() => this._getUpdatedCart())\n\t\t\t\t.then(responseHTML => {\n\t\t\t\t\tconst finalPrice = this._parseTotal(responseHTML);\n\t\t\t\t\tconst finalDiscount = originalPrice - finalPrice;\n\t\t\t\t\tbus.$emit('code-stacked', {\n\t\t\t\t\t\tcode: discount.code,\n\t\t\t\t\t\tfinalPrice,\n\t\t\t\t\t\tfinalDiscount,\n\t\t\t\t\t});\n\t\t\t\t\tif (finalPrice < currentPrice) {\n\t\t\t\t\t\tsuccessfulCodes.push(discount.code);\n\t\t\t\t\t\tcurrentDiscount = finalDiscount;\n\t\t\t\t\t\tcurrentPrice = finalPrice;\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t}\n\t\t\t\t\treturn this._removeCode(discount.code);\n\t\t\t\t}),\n\t\t).then(() =>\n\t\t\tbus.$emit('stackable-complete', {\n\t\t\t\tcodes: successfulCodes,\n\t\t\t\tfinalPrice: currentPrice,\n\t\t\t\tfinalDiscount: currentDiscount,\n\t\t\t}),\n\t\t);\n\t}\n\n\t_removeCode(code) {\n\t\treturn this._manageCode(this.REMOVE_CODE_URL, 'R', code);\n\t}\n\n\t_applyCode(code) {\n\t\treturn this._manageCode(this.bodyData.action, 'A', code);\n\t}\n\n\t_getUpdatedCart() {\n\t\treturn this._sendRequest(this.CART_URL, 'GET');\n\t}\n\n\t_manageCode(url, paramAction, code) {\n\t\tthis.bodyData.params.set(this.PARAMS_ACTION, paramAction);\n\t\tthis.bodyData.params.set(this.PARAMS_CODE_NAME, code);\n\t\treturn this._sendRequest(url, 'POST', this.bodyData.params);\n\t}\n\n\t_sendRequest(url, method, bodyData) {\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\tcredentials: 'include',\n\t\t\tbody: bodyData,\n\t\t}).then(response => response.text());\n\t}\n\n\t_parseTotal(data) {\n\t\tlet totalElement = null;\n\t\tif (data) {\n\t\t\ttotalElement = extractElementFromHTML(data, this.TOTAL_SELECTOR);\n\t\t} else {\n\t\t\ttotalElement = document.querySelector(this.TOTAL_SELECTOR);\n\t\t}\n\t\treturn elemToFloat(totalElement);\n\t}\n}\n","import BaseDriver from './_base';\n\nconst INPUT_CODE_FIELD_SELECTOR = '#promoCode';\n\n/* Driver behavior description:\n•    Existing code: yes\n•    Remove code: yes\n•    Stackable: yes\n•    Free gift support: no\n•    ‘isValid’ implemented: yes\n•    codes can be applied only on cart page\n*/\n\nconst Driver = class Driver extends BaseDriver {\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getUpdatedCart().then(responseHTML => this._parseTotal(responseHTML));\n\t}\n};\n\nexport default {\n\tname: 'Champion',\n\tdomain: 'champion.com',\n\tstackable: true,\n\tDriver,\n\tisCartEmpty() {\n\t\treturn document.querySelector('#shoppingCart_emptyShopCart');\n\t},\n\tisOnCartUrl(href) {\n\t\treturn (\n\t\t\thref.startsWith('https://www.champion.com') && Boolean(document.querySelector(INPUT_CODE_FIELD_SELECTOR))\n\t\t);\n\t},\n};\n","import Promise from 'bluebird';\n\nimport HanesDriver from './_base';\nimport { DOM } from '../../../utils';\n\nconst { extractFormValues } = DOM;\n\n/* Driver behavior description:\n•    Existing code: yes\n•    Remove code: yes\n•    Stackable: yes\n•    Free gift support: no\n•    ‘isValid’ implemented: yes\n•    codes can be applied only on cart page\n•    the driver can't analyze shipping promotions */\n\nconst INPUT_CODE_FIELD_SELECTOR = '#promoCode';\n\nconst Driver = class Driver extends HanesDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.FORM_DATA_SELECTOR = '#PromotionCodeForm';\n\t}\n\n\tbeforeTestCodes() {\n\t\t// Manage code request data\n\t\tthis.bodyData = extractFormValues(this.FORM_DATA_SELECTOR);\n\t\tthis.REMOVE_CODE_URL = this.bodyData.action.split('?')[0].replace('PromotionCodeApply', 'PromotionCodeRemove');\n\n\t\tthis.bodyData.params.set('requesttype', 'ajax');\n\t\treturn Promise.resolve();\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [...document.querySelectorAll(this.APPLIED_CODE_SELECTOR)].map(element =>\n\t\t\telement.innerText.trim(),\n\t\t);\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getUpdatedCart().then(responseHTML => {\n\t\t\t// Cart doesn't include tax and shipping\n\t\t\treturn this._parseTotal(responseHTML);\n\t\t});\n\t}\n};\n\nexport default {\n\tname: 'Hanes',\n\tdomain: 'hanes.com',\n\tstackable: true,\n\tDriver,\n\tisCartEmpty() {\n\t\treturn document.querySelector('#shoppingCart_emptyShopCart');\n\t},\n\tisOnCartUrl(href) {\n\t\treturn href.includes('hanes.com/shop') && Boolean(document.querySelector(INPUT_CODE_FIELD_SELECTOR));\n\t},\n};\n","import Hanesink from './_base';\n\n// Behavior description:\n// codes can be applied only on cart page\n// this driver is stackable\n// the driver can't analyze shipping promotions\n\nconst INPUT_CODE_FIELD_SELECTOR = '#promoCode';\n\nexport default {\n\tname: 'Fan Shop',\n\tdomain: 'hanesink.com',\n\tstackable: true,\n\tDriver: Hanesink,\n\tisCartEmpty() {\n\t\treturn document.querySelector('#shoppingCart_emptyShopCart');\n\t},\n\tisOnCartUrl(href) {\n\t\treturn (\n\t\t\thref.includes('hanesink.com/shop/AjaxOrderItemDisplayView') &&\n\t\t\tBoolean(document.querySelector(INPUT_CODE_FIELD_SELECTOR))\n\t\t);\n\t},\n};\n","import champion from './champion.com';\nimport hanes from './hanes.com';\nimport hanesink from './hanesink.com';\nimport justmysize from './justmysize.com';\nimport onehanesplace from './onehanesplace.com';\n\nexport default [champion, hanes, hanesink, justmysize, onehanesplace];\n","import BaseDriver from './_base';\n\n/**\nDriver behavior description:\n• Existing code: yes\n• Remove code: yes\n• Stackable: yes\n• Free gift support: no\n• ‘isValid’ implemented: yes\n• Manually apply code: no\nOptional:\n• Is driver SPA and add the condition to show popup: no\n */\n\nconst INPUT_CODE_FIELD_SELECTOR = '#promoCode';\n\nconst Driver = class Driver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.CODE_REGEXP = /order_promo_code\\s:\\s\"(.+)\",product_subcategory/;\n\t}\n\n\tgetExistingCodes() {\n\t\tlet codes = [];\n\t\tconst codesElem = [...document.querySelectorAll('script')]\n\t\t\t.find(elem => elem.innerText.includes('tealiumBreadcrumbs'))\n\t\t\t.innerText.match(this.CODE_REGEXP);\n\n\t\tif (codesElem && codesElem.length) {\n\t\t\tcodes = codesElem[1].split('|');\n\t\t}\n\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getUpdatedCart().then(responseHTML => {\n\t\t\t// Cart doesn't include tax and shipping\n\t\t\treturn this._parseTotal(responseHTML);\n\t\t});\n\t}\n};\n\nexport default {\n\tname: 'Just My Size',\n\tdomain: 'justmysize.com',\n\tstackable: true,\n\tDriver,\n\tisCartEmpty() {\n\t\treturn document.querySelector('#shoppingCart_emptyShopCart');\n\t},\n\tisOnCartUrl(href) {\n\t\treturn (\n\t\t\thref.includes('justmysize.com/shop/AjaxOrderItemDisplayView') &&\n\t\t\tBoolean(document.querySelector(INPUT_CODE_FIELD_SELECTOR))\n\t\t);\n\t},\n};\n","import BaseDriver from './_base';\n\n// Behavior description:\n// codes can be applied only on cart page\n// this driver is stackable\n// the driver can't analyze shipping promotions\n\nconst INPUT_CODE_FIELD_SELECTOR = '#promoCode';\n\nconst Driver = class Driver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.REMOVE_CODE_URL = 'https://www.onehanesplace.com/shop/AjaxRESTPromotionCodeRemove';\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getUpdatedCart().then(responseHTML => {\n\t\t\t// Cart doesn't include tax and shipping\n\t\t\treturn this._parseTotal(responseHTML);\n\t\t});\n\t}\n};\n\nexport default {\n\tname: 'One Hanes Place',\n\tdomain: 'onehanesplace.com',\n\tstackable: true,\n\tDriver,\n\tisCartEmpty() {\n\t\treturn document.querySelector('#shoppingCart_emptyShopCart');\n\t},\n\tisOnCartUrl(href) {\n\t\treturn (\n\t\t\thref.includes('onehanesplace.com/shop/AjaxOrderItemDisplayView') &&\n\t\t\tBoolean(document.querySelector(INPUT_CODE_FIELD_SELECTOR))\n\t\t);\n\t},\n};\n"],"sourceRoot":""}