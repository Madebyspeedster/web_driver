{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/progifts/_base.js","webpack:///./src/inject/drivers/progifts/berries.com.js","webpack:///./src/inject/drivers/progifts/index.js","webpack:///./src/inject/drivers/progifts/personalcreations.com.js","webpack:///./src/inject/drivers/progifts/proflowers.com.js","webpack:///./src/inject/drivers/progifts/proplants.com.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","elemToFloat","extractElementFromHTML","extractFormValues","DOM","DriverTemplate","constructor","domainName","isOnCartURL","window","location","hostname","includes","formValues","TOTAL_SELECTOR","BASE_URL","APPLY_URL","UPDATE_URL","pathname","orderId","requestParams","params","updateRequestBody","undefined","originalPrice","parseTotal","each","code","result","finalPrice","finalDiscount","applyCode","responseJSON","hasSpecialCodeBeenApplied","getOrderSummary","responseHTML","set","fetch","credentials","body","response","json","text","html","Driver","name","isOnCartUrl","href","codeInputExists","Boolean","startsWith","berries","personalcreations","proflowers","proplants","isCartEmpty","emptyCartElement","offsetParent","getCookie","browserUtils","_checkCondition","isOnHref","isEmpty","APPLIED_CODES_SELECTOR","request","setType","requestTypes","embedded","TOKEN","CART_ID","MARK_CODE","PROMO","BASE_API_URL","CLIENT_DATA","_getWindowObjectData","HEADERS","headers","cartToken","replace","querySelectorAll","map","codeElement","innerText","trim","length","_parseTotal","isValid","_applyCode","status","_getInfo","responseInfo","taxAmount","delivery","orderFeeSummaryDetail","reduce","sum","item","post","JSON","stringify","couponCode","get","data","totalAmount","variableString","requestDataElement","createElement","id","Object","assign","style","display","documentElement","appendChild","requestDataScript","parse","parentNode","removeChild","templateDriver","VALUES_SELECTOR","hasPropertyResult","prototype","hasOwnProperty","call","hasPropertyCodeBeenApplied","shippingValues","_getValues","taxValues","careHandling","shippingDiscount","string","free","extractElement","filter","elem","element","toLowerCase","nextElementSibling","acc","el2","innerHTML","getDriver","isSinglePageApp"],"mappings":"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","file":"drivers__progifts.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport BaseDriver from '../base';\nimport bus from '../../bus';\nimport { format, DOM } from '../../../utils';\n\nconst { elemToFloat } = format;\nconst { extractElementFromHTML, extractFormValues } = DOM;\n\nexport default class DriverTemplate extends BaseDriver {\n\tconstructor(domainName) {\n\t\tsuper();\n\t\tconst isOnCartURL = window.location.hostname.includes('cart');\n\t\tlet formValues = null;\n\n\t\tif (isOnCartURL) {\n\t\t\tformValues = extractFormValues('#cartForm');\n\t\t\tthis.TOTAL_SELECTOR = '.subtotal .value';\n\n\t\t\tconst BASE_URL = `https://cart.${domainName}/ShoppingCart`;\n\t\t\tthis.APPLY_URL = `${BASE_URL}/ApplySpecialCode`;\n\t\t\tthis.UPDATE_URL = `${BASE_URL}/UpdateSubtotal`;\n\t\t} else {\n\t\t\tconst match = window.location.pathname.match(/OrderProcessMVC\\/([^/]+)\\/(OPLegacyReview|OPReviewOrder)/);\n\t\t\tconst orderId = match ? match[1] : null;\n\n\t\t\tformValues = extractFormValues('#opBodyForm');\n\t\t\tthis.TOTAL_SELECTOR = '.orderSummaryTotalValue';\n\n\t\t\tconst BASE_URL = `https://orders.${domainName}/OrderProcessMVC/${orderId}/OPLegacyReview`;\n\t\t\tthis.APPLY_URL = `${BASE_URL}/ApplySpecialCode`;\n\t\t\tthis.UPDATE_URL = `${BASE_URL}/UpdateOrderSummary`;\n\t\t}\n\n\t\tif (formValues) {\n\t\t\tthis.requestParams = formValues.params;\n\t\t\tthis.updateRequestBody = isOnCartURL ? undefined : this.requestParams;\n\t\t}\n\t}\n\n\t// Base driver methods\n\tcheckCodes(codes, originalPrice = this.parseTotal()) {\n\t\treturn Promise.each(codes, code => {\n\t\t\t// `Number.MAX_SAFE_INTEGER` is used to avoid the best code replacement\n\t\t\t// with the worst one if it was applied before our checking\n\t\t\t// because in this case original price would be the best one,\n\t\t\t// and first invalid code in our list may become the best so it could be distractive\n\t\t\tconst result = { code, finalPrice: Number.MAX_SAFE_INTEGER, finalDiscount: 0 };\n\n\t\t\treturn this.applyCode(code)\n\t\t\t\t.then(responseJSON => {\n\t\t\t\t\tif (responseJSON.hasSpecialCodeBeenApplied || responseJSON.result) {\n\t\t\t\t\t\treturn this.getOrderSummary().then(responseHTML => {\n\t\t\t\t\t\t\tresult.finalPrice = this.parseTotal(responseHTML);\n\t\t\t\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t})\n\t\t\t\t.then(() => bus.$emit('code-checked', result));\n\t\t});\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this.applyCode(codes[0]);\n\t}\n\n\tapplyCode(code) {\n\t\tthis.requestParams.set('SpecialCode', code);\n\t\treturn fetch(this.APPLY_URL, {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include',\n\t\t\tbody: this.requestParams,\n\t\t}).then(response => response.json());\n\t}\n\n\tgetOrderSummary() {\n\t\treturn fetch(this.UPDATE_URL, {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include',\n\t\t\tbody: this.updateRequestBody,\n\t\t}).then(response => response.text());\n\t}\n\n\t// Template driver methods\n\tparseTotal(html) {\n\t\tlet totalElement = null;\n\t\tif (html) {\n\t\t\ttotalElement = extractElementFromHTML(html, this.TOTAL_SELECTOR);\n\t\t} else {\n\t\t\ttotalElement = document.querySelector(this.TOTAL_SELECTOR);\n\t\t}\n\t\treturn elemToFloat(totalElement);\n\t}\n}\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper('berries.com');\n\t}\n\t// Applied codes can't be retrieved and removed\n};\n\nexport default {\n\tname: 'Berries',\n\tdomain: 'berries.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\tconst codeInputExists = Boolean(document.querySelector('[name=\"SpecialCode\"]'));\n\t\treturn (\n\t\t\thref.includes('cart.berries.com') ||\n\t\t\t(href.startsWith('https://orders.berries.com/OrderProcessMVC') && codeInputExists)\n\t\t);\n\t},\n};\n","import berries from './berries.com';\nimport personalcreations from './personalcreations.com';\nimport proflowers from './proflowers.com';\nimport proplants from './proplants.com';\n\nexport default [berries, personalcreations, proflowers, proplants];\n","import DriverTemplate from './_base';\n\n/* Driver behavior description:\n+ Existing code: no\n+ Remove code: no\n+ Stackable: no\n+ Free gift support: no\n+ Free shipping: no\n+ ‘isValid’ implemented: no\n+ Codes can be replaced by another code: yes\n+ Gather codes on site pages: no\n+ Pages, where extension works:\n    - the cart page\n*/\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper('personalcreations.com');\n\t}\n\t// Applied codes can't be retrieved and removed\n};\n\nexport default {\n\tname: 'Personal Creations',\n\tdomain: 'personalcreations.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\treturn href.includes('cart.personalcreations.com');\n\t},\n\tisCartEmpty() {\n\t\tconst emptyCartElement = document.querySelector('#emptyCartContents');\n\t\treturn emptyCartElement && emptyCartElement.offsetParent;\n\t},\n};\n","import Promise from 'bluebird';\nimport DriverTemplate from './_base';\nimport BaseDriver from '../base';\nimport bus from '../../bus';\nimport { format, browserUtils, log, request, requestTypes } from '../../../utils';\nimport { extractElement } from '../../../utils/DOM';\n\nconst { toFloat, elemToFloat } = format;\nconst { getCookie } = browserUtils;\n\nconst BASE_URL = 'https://www.proflowers.com';\n\n/** Behavior description:\n * - existing code: no\n * - remove code: no\n * - stackable: no\n * - free gift support: no\n * - 'isValid' implemented: yes\n * - manually apply code: no\n * - replace code: true\n * there are two versions of the site at the moment.\n * On the old site we can run codes testing on the cart and review pages\n * On the new version only on the review page\n *  * */\n\nconst _checkCondition = () => {\n\tconst { href } = window.location;\n\tconst codeInputExists = Boolean(document.querySelector('[name=\"SpecialCode\"], #promotion-code'));\n\tconst isOnHref =\n\t\thref.startsWith('https://cart.proflowers.com') ||\n\t\thref.startsWith('https://orders.proflowers.com/OrderProcessMVC') ||\n\t\thref.startsWith(`${BASE_URL}/purchase/review`);\n\tconst emptyCartElement = document.querySelector('#emptyCartContents');\n\tconst isEmpty = emptyCartElement && emptyCartElement.offsetParent;\n\treturn codeInputExists && isOnHref && !isEmpty;\n};\n\nconst Driver = class Driver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.APPLIED_CODES_SELECTOR = '.promotion-code-applied.is-valid';\n\t\tthis.TOTAL_SELECTOR = '.order-summary-totals .line-item .amount';\n\t\trequest.setType(requestTypes.embedded);\n\t}\n\n\tcheckCondition() {\n\t\treturn _checkCondition();\n\t}\n\n\tbeforeTestCodes() {\n\t\tthis.TOKEN = getCookie('cartToken');\n\t\tthis.CART_ID = getCookie('cartId');\n\t\tthis.MARK_CODE = getCookie('markcode');\n\t\tthis.PROMO = getCookie('promo');\n\t\tthis.BASE_API_URL = `https://api-gateway.proflowers.com/ordering/proflowers/api/carts`;\n\t\tthis.CLIENT_DATA = this._getWindowObjectData(\n\t\t\t'window.__NEXT_DATA__.props.initialProps.pageProps.cartData.clientContext',\n\t\t);\n\t\tthis.HEADERS = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=UTF-8',\n\t\t\t\tcartToken: `bearer ${this.TOKEN}`,\n\t\t\t\t'client-context': `${this.CLIENT_DATA.replace(/\"/g, \"'\")}`,\n\t\t\t},\n\t\t};\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [...document.querySelectorAll(this.APPLIED_CODES_SELECTOR)].map(codeElement =>\n\t\t\tcodeElement.innerText.trim(),\n\t\t);\n\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog(`Original price: ${originalPrice}`);\n\t\treturn Promise.each(codes, code => {\n\t\t\tconst result = {\n\t\t\t\tcode,\n\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\tfinalDiscount: 0,\n\t\t\t\tisValid: true,\n\t\t\t};\n\t\t\treturn this._applyCode(code).then(responseJSON => {\n\t\t\t\tif (responseJSON.status === '406' || responseJSON.status === '400') {\n\t\t\t\t\tresult.isValid = false;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\t\t\t\treturn this._getInfo().then(responseInfo => {\n\t\t\t\t\tresult.finalPrice = this._parseTotal(responseInfo);\n\t\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this._applyCode(codes[0]);\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getInfo().then(responseJSON => {\n\t\t\tconst { taxAmount } = responseJSON;\n\t\t\tconst delivery = responseJSON.orderFeeSummaryDetail.reduce((sum, item) => sum + item.value, 0);\n\t\t\treturn this._parseTotal(responseJSON) - taxAmount - delivery;\n\t\t});\n\t}\n\n\t_applyCode(code) {\n\t\treturn request\n\t\t\t.post(\n\t\t\t\t`${this.BASE_API_URL}/${this.CART_ID}/promotion/coupon?promo=${this.PROMO}&source=${this.MARK_CODE}`,\n\t\t\t\tJSON.stringify({ couponCode: code }),\n\t\t\t\tthis.HEADERS,\n\t\t\t)\n\t\t\t.then(response => response.json());\n\t}\n\n\t_getInfo() {\n\t\treturn request\n\t\t\t.get(`${this.BASE_API_URL}/${this.CART_ID}?promo=${this.PROMO}&source=${this.MARK_CODE}`, this.HEADERS)\n\t\t\t.then(response => response.json());\n\t}\n\n\t_parseTotal(data) {\n\t\tif (data) {\n\t\t\treturn toFloat(data.totalAmount);\n\t\t}\n\t\treturn elemToFloat(document.querySelector(this.TOTAL_SELECTOR));\n\t}\n\n\t_getWindowObjectData(variableString) {\n\t\t// We will put generated request payload to this element\n\t\tconst requestDataElement = document.createElement('div');\n\t\trequestDataElement.id = 'get-existing-codes-genie';\n\t\tObject.assign(requestDataElement.style, { display: 'none' });\n\n\t\tdocument.documentElement.appendChild(requestDataElement);\n\n\t\t// Script which will generate request payload\n\t\tconst requestDataScript = document.createElement('script');\n\t\trequestDataScript.textContent = `document.getElementById(\"${\n\t\t\trequestDataElement.id\n\t\t}\").innerText = JSON.stringify(${variableString});`;\n\t\tdocument.documentElement.appendChild(requestDataScript);\n\t\tconst data = JSON.parse(requestDataElement.innerText);\n\t\t// Remove created blocks\n\t\trequestDataElement.parentNode.removeChild(requestDataElement);\n\t\trequestDataScript.parentNode.removeChild(requestDataScript);\n\t\treturn data;\n\t}\n};\n\nconst templateDriver = class templateDriver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper('proflowers.com');\n\t\tthis.VALUES_SELECTOR = '.orderSummaryContainer .orderSummaryItemDescription';\n\t\tthis.isOnCartURL = window.location.hostname.includes('cart');\n\t}\n\n\tcheckCondition() {\n\t\treturn _checkCondition();\n\t}\n\n\tcheckCodes(codes, originalPrice = this.parseTotal()) {\n\t\tlog(`Original price: ${originalPrice}`);\n\t\treturn Promise.each(codes, code => {\n\t\t\tconst result = {\n\t\t\t\tcode,\n\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\tfinalDiscount: 0,\n\t\t\t};\n\t\t\treturn this.applyCode(code).then(responseJSON => {\n\t\t\t\tconst hasPropertyResult = Object.prototype.hasOwnProperty.call(responseJSON, 'result');\n\t\t\t\tconst hasPropertyCodeBeenApplied = Object.prototype.hasOwnProperty.call(\n\t\t\t\t\tresponseJSON,\n\t\t\t\t\t'hasSpecialCodeBeenApplied',\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\t(hasPropertyCodeBeenApplied && !responseJSON.hasSpecialCodeBeenApplied) ||\n\t\t\t\t\t(hasPropertyResult && !responseJSON.result)\n\t\t\t\t) {\n\t\t\t\t\tresult.isValid = false;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\t\t\t\treturn this.getOrderSummary().then(responseHTML => {\n\t\t\t\t\tconst finalPrice = this.parseTotal(responseHTML);\n\t\t\t\t\tresult.finalPrice = finalPrice;\n\t\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this.getOrderSummary().then(responseHTML => {\n\t\t\tif (this.isOnCartURL) {\n\t\t\t\treturn this.parseTotal(responseHTML);\n\t\t\t}\n\t\t\tconst shippingValues = this._getValues('delivery', responseHTML);\n\t\t\tconst taxValues = this._getValues('taxes', responseHTML);\n\t\t\tconst careHandling = this._getValues('care & handling', responseHTML);\n\t\t\tconst shippingDiscount = this._getValues('free standard delivery', responseHTML, true);\n\t\t\treturn this.parseTotal(responseHTML) - shippingValues - careHandling - taxValues + shippingDiscount;\n\t\t});\n\t}\n\n\t_getValues(string, response, free = false) {\n\t\treturn [...extractElement(this.VALUES_SELECTOR, response, true)]\n\t\t\t.filter(elem => {\n\t\t\t\tconst element = elem.innerText.toLowerCase();\n\t\t\t\treturn free ? element.includes(string) : element.includes(string) && !element.includes('free');\n\t\t\t})\n\t\t\t.map(elem => elem.nextElementSibling)\n\t\t\t.reduce(\n\t\t\t\t(acc, el2) =>\n\t\t\t\t\tacc + (free ? toFloat(el2.innerHTML.replace('(', '').replace(')', '')) : elemToFloat(el2)),\n\t\t\t\t0,\n\t\t\t);\n\t}\n};\n\nconst getDriver = () => {\n\tconst { href } = window.location;\n\tif (href.includes('cart.proflowers.com') || href.includes('/OrderProcessMVC')) {\n\t\treturn templateDriver;\n\t}\n\treturn Driver;\n};\n\nexport default {\n\tname: 'Pro Flowers',\n\tdomain: 'proflowers.com',\n\tDriver: getDriver(),\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper('proplants.com');\n\t}\n\t// Applied codes can't be retrieved and removed\n};\n\nexport default {\n\tname: 'Proplants',\n\tdomain: 'proplants.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\tconst codeInputExists = Boolean(document.querySelector('[name=\"SpecialCode\"]'));\n\t\treturn (\n\t\t\thref.includes('cart.proplants.com') ||\n\t\t\t(href.startsWith('https://orders.proplants.com/OrderProcessMVC') && codeInputExists)\n\t\t);\n\t},\n};\n"],"sourceRoot":""}