{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/m-flow/_base.js","webpack:///./src/inject/drivers/m-flow/dresslily.com.js","webpack:///./src/inject/drivers/m-flow/gamiss.com.js","webpack:///./src/inject/drivers/m-flow/index.js","webpack:///./src/inject/drivers/m-flow/rosewholesale.com.js","webpack:///./src/inject/drivers/m-flow/sammydress.com.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","elemToFloat","extractElementFromHTML","DOM","Driver","constructor","BASE_URL","EXISTING_CODE_SELECTOR","TOTAL_SELECTOR","APPLY_PATHNAME","REMOVE_PATHNAME","parseTotalElementCallback","element","filter","code","Boolean","length","_removeCode","responseHtml","_parseTotal","originalPrice","each","_applyCode","finalPrice","finalDiscount","_manageCode","actionUrl","fetch","credentials","response","text","html","extractElement","MFlowBaseDriver","DOMAIN","EMPTY_CART_SELECTOR","TOTAL_REG","DISABLE_TIME_MS","request","setType","requestTypes","embedded","href","window","location","isNotMaxCodeTesting","dataExpired","lastTestTimestamp","codeTestingCount","isOnRightURL","startsWith","isCartEmpty","offsetParent","isCodeInput","_getUpdatedCart","requestOptions","headers","delay","get","parseFloat","name","maxCoupons","isSinglePageApp","CART_URLS","subdomain","host","split","isOnCartUrl","some","el","dresslily","gamiss","rosewholesale","sammydress","getCookie","browserUtils"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA,MAAM;AAAEA;AAAF,IAAcC,6CAApB;AAEe,MAAMC,UAAN,CAAiB;AAC/B;;;;AAIAC,yBAAuB,CAACC,IAAI,GAAG,GAAR,EAAa;AACnC,QAAIC,aAAa,GAAG,KAApB;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACxC,UAAI,CAACF,aAAL,EAAoB;AACnB,YAAI;AACH;AACA;AACAA,uBAAa,GAAG,IAAhB;AACA,gBAAMG,YAAY,GAAG,MAAM,KAAKC,yBAAL,EAA3B;AACAJ,uBAAa,GAAG,KAAhB;;AACA,cAAIG,YAAJ,EAAkB;AACjBE,yBAAa,CAACJ,QAAD,CAAb;AACAK,wDAAG,CAACC,KAAJ,CAAU,mBAAV;AACA;AACD,SAVD,CAUE,OAAOC,CAAP,EAAU;AACXC,wEAAiB,CAACD,CAAD,EAAI;AAAEE,kBAAM,EAAE;AAAV,WAAJ,CAAjB;AACAL,uBAAa,CAACJ,QAAD,CAAb;AACA;AACD;AACD,KAjB2B,EAiBzBF,IAjByB,CAA5B;AAmBA,WAAOE,QAAP;AACA;;AAEDG,2BAAyB,GAAG;AAC3B,WAAO,KAAP;AACA;AAED;;;;;;;AAKA,QAAMO,aAAN,CAAoBC,MAApB,EAA4B;AAC3B,UAAMC,QAAQ,GAAG,MAAM,KAAKC,WAAL,EAAvB;;AAEA,QAAID,QAAQ,KAAK,IAAjB,EAAuB;AACtB;AACA,aAAOE,OAAO,CAACC,OAAR,EAAP;AACA;;AACD,UAAMC,WAAW,GAAG,KAAKC,qBAAL,CAA2BN,MAA3B,CAApB;AACA,UAAMO,aAAa,GAAG;AACrBN,cADqB;AAErBO,gBAAU,EAAEC,IAAI,CAACC,GAAL;AAFS,KAAtB;AAIAC,4DAAmB,CAACC,gBAApB,CAAqCP,WAArC,EAAkDE,aAAlD;AACAM,sDAAG,CAAC,sBAAD,EAAyBN,aAAzB,CAAH;AACA,WAAOJ,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;;;AAMA,QAAMU,eAAN,CAAsBd,MAAtB,EAA8Be,kBAAkB,GAAG,MAAnD,EAA2D;AAC1D,UAAMV,WAAW,GAAG,KAAKC,qBAAL,CAA2BN,MAA3B,CAApB;AACA,UAAMgB,aAAa,GAAG,MAAML,wDAAmB,CAACM,gBAApB,CAAqCZ,WAArC,CAA5B;;AAEA,QAAIW,aAAJ,EAAmB;AAClB,YAAM;AAAER,kBAAF;AAAcP;AAAd,UAA2Be,aAAjC,CADkB,CAElB;;AACAL,8DAAmB,CAACO,mBAApB,CAAwCb,WAAxC;;AAEA,UAAII,IAAI,CAACC,GAAL,KAAaF,UAAb,IAA2BO,kBAA/B,EAAmD;AAClDF,0DAAG,CAAC,uBAAD,EAA0BZ,QAA1B,CAAH;AACA,eAAO,KAAKkB,WAAL,CAAiBlB,QAAjB,CAAP;AACA;;AACDY,wDAAG,CAAC,uCAAD,CAAH;AACA;;AACD,WAAOV,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;AAIAF,aAAW,GAAG;AACb,WAAO,IAAP;AACA;AAED;;;;;;;AAKAiB,aAAW,GAAG;AACb,WAAOhB,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;AAIAE,uBAAqB,CAACN,MAAD,EAAS;AAC7B;AACA,WAAQ,GAAEA,MAAO,WAAjB;AACA;AAED;;;;;;;;AAMAoB,eAAa,GAAG;AACf,QAAIC,UAAU,GAAGC,MAAM,CAACC,gBAAxB;AACA,UAAMC,kBAAkB,GAAG,KAAKC,oBAAhC;;AACA,QAAID,kBAAJ,EAAwB;AACvB,YAAM;AAAEE,gBAAF;AAAYC,iBAAZ;AAAuBC;AAAvB,UAAiCJ,kBAAvC;AACA,UAAIK,YAAJ,CAFuB,CAGvB;AACA;;AACA,UAAIC,KAAK,CAACC,OAAN,CAAcL,QAAd,CAAJ,EAA6B;AAC5BA,gBAAQ,CAACM,OAAT,CAAiBC,YAAY,IAAI;AAChC,cAAI,CAACJ,YAAL,EAAmB;AAClBA,wBAAY,GAAGK,QAAQ,CAACC,aAAT,CAAuBF,YAAvB,CAAf;AACA;AACD,SAJD;AAKA,OAND,MAMO,IAAI,OAAOP,QAAP,KAAoB,QAAxB,EAAkC;AACxCG,oBAAY,GAAGK,QAAQ,CAACC,aAAT,CAAuBT,QAAvB,CAAf;AACA,OAFM,MAEA;AACN7B,sEAAiB,CAChB,IAAIuC,KAAJ,CAAW,8DAA6D,OAAOV,QAAS,EAAxF,CADgB,CAAjB;AAGA;;AAED,UAAIG,YAAJ,EAAkB;AACjB,YAAIQ,KAAK,GAAGV,SAAS,GAAGE,YAAY,CAACS,YAAb,CAA0BX,SAA1B,CAAH,GAA0CE,YAAY,CAACU,WAA5E;;AAEA,YAAIF,KAAK,IAAIT,KAAb,EAAoB;AACnB;AACA;AACA,gBAAM;AAAEY,mBAAO,GAAG,IAAZ;AAAkBC,iBAAK,GAAG;AAA1B,cAAgCb,KAAtC;AACAS,eAAK,GAAGA,KAAK,CAACK,KAAN,CAAYF,OAAZ,EAAqBC,KAArB,CAAR;AACA;;AACDpB,kBAAU,GAAGtC,OAAO,CAACsD,KAAD,CAApB;AACA;AACD;;AACD,WAAOhB,UAAP;AACA;AAED;;;;;;;;;AAOAsB,iBAAe,GAAG;AACjB,WAAOxC,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;AAKA;;;;;;;;;;;AASAwC,kBAAgB,GAAG;AAClB,WAAOzC,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;;;;AAOAyC,kBAAgB,GAAG;AAClB,WAAO1C,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;;;;;AAQA0C,YAAU,GAAG;AACZ,WAAO3C,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;;;;;;AASA2C,YAAU,GAAG;AACZ,WAAO5C,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;;;;;;AASA4C,YAAU,GAAG;AACZ,WAAO7C,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;;;;AAOA6C,aAAW,GAAG;AACb,WAAO9C,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;;;AAMA8C,kBAAgB,GAAG;AAClB,WAAO,EAAP;AACA;AAED;;;;;;;;AAOA;;;;;;AAIAC,kBAAgB,GAAG;AAClB,WAAO;AACNC,WAAK,EAAE,EADD;AAENC,eAAS,EAAE;AAFL,KAAP;AAIA;AAED;;;;;;;;AAMAC,wBAAsB,GAAG;AACxB,WAAO,IAAP;AACA;AAED;;;;;;;AAKAC,iBAAe,CAACpE,IAAI,GAAG,GAAR,EAAa;AAC3B,QAAIqE,aAAa,GAAG,IAApB;AACA,QAAIpE,aAAa,GAAG,KAApB;AAEA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,YAAY;AACxC,UAAI,CAACF,aAAL,EAAoB;AACnB,YAAIG,YAAY,GAAG,IAAnB;;AACA,YAAI;AACH;AACA;AACAH,uBAAa,GAAG,IAAhB;AACAG,sBAAY,GAAG,MAAM,KAAKkE,cAAL,EAArB;AACArE,uBAAa,GAAG,KAAhB;AACA,SAND,CAME,OAAOQ,CAAP,EAAU;AACXC,wEAAiB,CAACD,CAAD,EAAI;AAAEE,kBAAM,EAAE;AAAV,WAAJ,CAAjB;AACAL,uBAAa,CAACJ,QAAD,CAAb;AACA;;AACD,YAAIE,YAAY,KAAKiE,aAArB,EAAoC;AACnC9D,sDAAG,CAACC,KAAJ,CAAUJ,YAAY,GAAG,aAAH,GAAmB,eAAzC;AACA;;AACDiE,qBAAa,GAAGjE,YAAhB;AACA;AACD,KAlB2B,EAkBzBJ,IAlByB,CAA5B,CAJ2B,CAuB3B;;AACA,WAAOE,QAAP;AACA;AAED;;;;;;AAIAoE,gBAAc,GAAG;AAChB,WAAO,KAAP;AACA;AAED;;;;;;;;;;;AASAC,oBAAkB,GAAG;AACpB,WAAOvD,OAAO,CAACC,OAAR,EAAP;AACA;AAED;;;;;;AAIAuD,+BAA6B,CAAC,GAAGC,IAAJ,EAAU;AACtC,WAAO,KAAKC,UAAL,CAAgB,KAAKH,kBAArB,EAAyCE,IAAzC,CAAP;AACA;AAED;;;;;;AAIAE,4BAA0B,CAAC,GAAGF,IAAJ,EAAU;AACnC,WAAO,KAAKC,UAAL,CAAgB,KAAKlB,eAArB,EAAsCiB,IAAtC,CAAP;AACA;AAED;;;;;;AAIAG,0BAAwB,GAAG;AAC1B,WAAO,KAAKF,UAAL,CAAgB,KAAKzC,aAArB,CAAP;AACA;AAED;;;;;;AAIA4C,6BAA2B,CAAC,GAAGJ,IAAJ,EAAU;AACpC,WAAO,KAAKC,UAAL,CAAgB,KAAKX,gBAArB,EAAuCU,IAAvC,CAAP;AACA;AAED;;;;;;AAIAK,6BAA2B,CAAC,GAAGL,IAAJ,EAAU;AACpC,WAAO,KAAKC,UAAL,CAAgB,KAAKV,gBAArB,EAAuCS,IAAvC,CAAP;AACA;AAED;;;;;;AAIAM,wBAAsB,CAAC,GAAGN,IAAJ,EAAU;AAC/B,WAAO,KAAKC,UAAL,CAAgB,KAAKZ,WAArB,EAAkCW,IAAlC,CAAP;AACA;AAED;;;;;;AAIAO,6BAA2B,CAAC,GAAGP,IAAJ,EAAU;AACpC,WAAO,KAAKC,UAAL,CAAgB,KAAKhB,gBAArB,EAAuCe,IAAvC,CAAP;AACA;AAED;;;;;;AAIAQ,uBAAqB,CAAC,GAAGR,IAAJ,EAAU;AAC9B,WAAO,KAAKC,UAAL,CAAgB,KAAKd,UAArB,EAAiCa,IAAjC,CAAP;AACA;AAED;;;;;;AAIAS,6BAA2B,CAAC,GAAGT,IAAJ,EAAU;AACpC,WAAO,KAAKC,UAAL,CAAgB,KAAKjB,gBAArB,EAAuCgB,IAAvC,CAAP;AACA;AAED;;;;;;AAIAU,uBAAqB,CAAC,GAAGV,IAAJ,EAAU;AAC9B,WAAO,KAAKC,UAAL,CAAgB,KAAKf,UAArB,EAAiCc,IAAjC,CAAP;AACA;AAED;;;;;;AAIAW,uBAAqB,CAAC,GAAGX,IAAJ,EAAU;AAC9B,WAAO,KAAKC,UAAL,CAAgB,KAAKb,UAArB,EAAiCY,IAAjC,CAAP;AACA;AAED;;;;;;AAIAC,YAAU,CAACW,MAAD,EAASZ,IAAT,EAAe;AACxB,WAAOzD,OAAO,CAACC,OAAR,GAAkBqE,IAAlB,CAAuB,MAAMD,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBd,IAAnB,CAA7B,CAAP;AACA;;AAta8B,C;;;;;;;;;;;;ACNhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA,MAAM;AAAEe;AAAF,IAAkB3F,6CAAxB;AACA,MAAM;AAAE4F;AAAF,IAA6BC,0CAAnC;AAEe,MAAMC,MAAN,SAAqB7F,6CAArB,CAAgC;AAC9C8F,aAAW,GAAG;AACb;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,sBAAL,GAA8B,iBAA9B;AACA,SAAKC,cAAL,GAAsB,sBAAtB;AACA,SAAKC,cAAL,GAAsB,mBAAtB;AACA,SAAKC,eAAL,GAAuB,0BAAvB;;AACA,SAAKC,yBAAL,GAAiCC,OAAO,IAAIX,WAAW,CAACW,OAAD,CAAvD;AACA;;AAEDnC,kBAAgB,GAAG;AAClB,UAAMC,KAAK,GAAG,CAAClB,QAAQ,CAACC,aAAT,CAAuB,KAAK8C,sBAA5B,EAAoD3C,YAApD,CAAiE,OAAjE,CAAD,EAA4EiD,MAA5E,CAAmFC,IAAI,IACpGC,OAAO,CAACD,IAAD,CADM,CAAd;AAGA,WAAO;AACNpC,WADM;AAENC,eAAS,EAAED,KAAK,CAACsC;AAFX,KAAP;AAIA;;AAEDzC,aAAW,GAAG;AACb,WAAO,KAAK0C,WAAL,GAAmBlB,IAAnB,CAAwBmB,YAAY,IAAI,KAAKC,WAAL,CAAiBD,YAAjB,CAAxC,CAAP;AACA;;AAED9C,YAAU,CAACM,KAAD,EAAQ0C,aAAa,GAAG,KAAKD,WAAL,EAAxB,EAA4C;AACrDhF,sDAAG,CAAE,mBAAkBiF,aAAc,EAAlC,CAAH;AACA,WAAO3F,+CAAO,CAAC4F,IAAR,CAAa3C,KAAb,EAAoBoC,IAAI,IAC9B,KAAKQ,UAAL,CAAgBR,IAAhB,EAAsB,IAAtB,EAA4Bf,IAA5B,CAAiCmB,YAAY,IAAI;AAChD,YAAMK,UAAU,GAAG,KAAKJ,WAAL,CAAiBD,YAAjB,CAAnB;;AACA,YAAMM,aAAa,GAAGJ,aAAa,GAAGG,UAAtC;AACA,aAAO,KAAKN,WAAL,GAAmBlB,IAAnB,CAAwB,MAAM/E,4CAAG,CAACC,KAAJ,CAAU,cAAV,EAA0B;AAAE6F,YAAF;AAAQS,kBAAR;AAAoBC;AAApB,OAA1B,CAA9B,CAAP;AACA,KAJD,CADM,CAAP;AAOA;;AAEDnD,YAAU,CAACK,KAAD,EAAQ;AACjB,WAAO,KAAK4C,UAAL,CAAgB5C,KAAK,CAAC,CAAD,CAArB,CAAP;AACA;;AAED4C,YAAU,CAACR,IAAD,EAAO;AAChB,WAAO,KAAKW,WAAL,CAAkB,GAAE,KAAKhB,cAAe,UAASK,IAAK,EAAtD,CAAP;AACA;;AAEDG,aAAW,GAAG;AACb,WAAO,KAAKQ,WAAL,CAAiB,KAAKf,eAAtB,CAAP;AACA;;AAEDe,aAAW,CAACC,SAAD,EAAY;AACtB,WAAOC,KAAK,CAAE,GAAE,KAAKrB,QAAS,IAAGoB,SAAU,EAA/B,EAAkC;AAC7C5B,YAAM,EAAE,KADqC;AAE7C8B,iBAAW,EAAE;AAFgC,KAAlC,CAAL,CAGJ7B,IAHI,CAGC8B,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHb,CAAP;AAIA;;AAEDX,aAAW,CAACY,IAAD,EAAO;AACjB,QAAI5E,YAAY,GAAG,IAAnB;;AACA,QAAI4E,IAAJ,EAAU;AACT5E,kBAAY,GAAG+C,sBAAsB,CAAC6B,IAAD,EAAO,KAAKvB,cAAZ,CAArC;AACA,KAFD,MAEO;AACNrD,kBAAY,GAAGK,QAAQ,CAACC,aAAT,CAAuB,KAAK+C,cAA5B,CAAf;AACA;;AACD,WAAO,KAAKG,yBAAL,CAA+BxD,YAA/B,CAAP;AACA;;AA/D6C,C;;;;;;;;;;;;ACR/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA,MAAM;AAAE8C;AAAF,IAAkB3F,6CAAxB;AACA,MAAM;AAAE0H;AAAF,IAAqB7B,0CAA3B;AAEA;;;;;;;;;;;;;;AAcA,MAAMG,QAAQ,GAAG,4BAAjB;AAEA,MAAMF,MAAM,GAAG,MAAMA,MAAN,SAAqB6B,6CAArB,CAAqC;AACnD5B,aAAW,GAAG;AACb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAK4B,MAAL,GAAc,eAAd;AACA,SAAK3B,sBAAL,GAA8B,8BAA9B;AACA,SAAKC,cAAL,GAAsB,iDAAtB;AACA,SAAK2B,mBAAL,GAA2B,iBAA3B;AACA,SAAKzB,eAAL,GAAuB,+BAAvB;AACA,SAAK0B,SAAL,GAAiB,8CAAjB;AACA,SAAKC,eAAL,GAAuB,KAAK,EAAL,GAAU,IAAjC,CATa,CAS0B;;AACvCC,kDAAO,CAACC,OAAR,CAAgBC,mDAAY,CAACC,QAA7B;AACA;;AAED,QAAM1D,cAAN,GAAuB;AACtB,UAAM;AAAE2D;AAAF,QAAWC,MAAM,CAACC,QAAxB;AACA,QAAIC,mBAAmB,GAAG,IAA1B;AACA,UAAMvG,aAAa,GAAG,MAAML,iEAAmB,CAACM,gBAApB,CAAqC,KAAK2F,MAA1C,CAA5B;;AACA,QAAI5F,aAAJ,EAAmB;AAClB,YAAMwG,WAAW,GAAG/G,IAAI,CAACC,GAAL,KAAaM,aAAa,CAACyG,iBAA3B,IAAgD,KAAKV,eAAzE;;AACA,UAAIS,WAAJ,EAAiB;AAChB7G,yEAAmB,CAACO,mBAApB,CAAwC,KAAK0F,MAA7C;AACA,OAFD,MAEO;AACNW,2BAAmB,GAAGvG,aAAa,CAAC0G,gBAAd,GAAiC,CAAvD;AACA;AACD;;AAED,UAAMC,YAAY,GACjBP,IAAI,CAACQ,UAAL,CAAiB,GAAE5C,QAAS,gBAA5B,KAAgDoC,IAAI,CAACQ,UAAL,CAAiB,GAAE5C,QAAS,oBAA5B,CADjD;AAEA,UAAM6C,WAAW,GAAG,CAAC3F,QAAQ,CAACC,aAAT,CAAuB,KAAK0E,mBAA5B,KAAoD,EAArD,EAAyDiB,YAA7E;AACA,UAAMC,WAAW,GAAG,CAAC7F,QAAQ,CAACC,aAAT,CAAuB,KAAK8C,sBAA5B,KAAuD,EAAxD,EAA4D6C,YAAhF;AACA,WAAOH,YAAY,IAAI,CAACE,WAAjB,IAAgCE,WAAhC,IAA+CR,mBAAtD;AACA;;AAEDtE,aAAW,GAAG;AACb,WAAO,KAAK0C,WAAL,GACLlB,IADK,CACA,MAAM,KAAKuD,eAAL,EADN,EAELvD,IAFK,CAEAmB,YAAY,IAAI,KAAKC,WAAL,CAAiBD,YAAjB,CAFhB,CAAP;AAGA;;AAED,QAAM/C,gBAAN,GAAyB;AACxB,UAAM7B,aAAa,GAAG,MAAML,iEAAmB,CAACM,gBAApB,CAAqC,KAAK2F,MAA1C,CAA5B;AACA,UAAMc,gBAAgB,GAAG1G,aAAa,GAAGA,aAAa,CAAC0G,gBAAjB,GAAoC,CAA1E;AACA/G,qEAAmB,CAACC,gBAApB,CAAqC,KAAKgG,MAA1C,EAAkD;AACjDc,sBAAgB,EAAEA,gBAAgB,GAAG,CADY;AAEjDD,uBAAiB,EAAEhH,IAAI,CAACC,GAAL;AAF8B,KAAlD;AAIA;;AAED4C,wBAAsB,GAAG;AACxB;AACA,WAAO,KAAK0E,eAAL,GAAuBvD,IAAvB,CAA4B8B,QAAQ,IAAI,KAAKV,WAAL,CAAiBU,QAAjB,CAAxC,CAAP;AACA;;AAEDJ,aAAW,CAACC,SAAD,EAAY;AACtB,UAAM6B,cAAc,GAAG;AACtB3B,iBAAW,EAAE,SADS;AAEtB4B,aAAO,EAAE;AACR,4BAAoB;AADZ;AAFa,KAAvB,CADsB,CAOtB;;AACA,WAAO/H,+CAAO,CAACgI,KAAR,CAAc,IAAd,EAAoB1D,IAApB,CAAyB,MAC/BuC,8CAAO,CACLoB,GADF,CACO,GAAE,KAAKpD,QAAS,IAAGoB,SAAU,MAAK3F,IAAI,CAACC,GAAL,EAAW,EADpD,EACuDuH,cADvD,EAEExD,IAFF,CAEO8B,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFnB,CADM,CAAP;AAKA;;AAEDwB,iBAAe,GAAG;AACjB,WAAO3B,KAAK,CAACgB,MAAM,CAACC,QAAP,CAAgBF,IAAjB,EAAuB;AAClC5C,YAAM,EAAE,KAD0B;AAElC8B,iBAAW,EAAE,SAFqB;AAGlC4B,aAAO,EAAE;AACR,qCAA6B;AADrB;AAHyB,KAAvB,CAAL,CAMJzD,IANI,CAMC8B,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANb,CAAP;AAOA;;AAEDX,aAAW,CAACY,IAAD,EAAO;AACjB,QAAIA,IAAJ,EAAU;AACT,aAAO4B,UAAU,CAAC5B,IAAI,CAAC/D,KAAL,CAAW,KAAKoE,SAAhB,EAA2B,CAA3B,CAAD,CAAjB;AACA;;AACD,WAAOnC,WAAW,CAAC+B,cAAc,CAAC,KAAKxB,cAAN,CAAf,CAAlB;AACA;;AApFkD,CAApD;AAuFe;AACdoD,MAAI,EAAE,WADQ;AAEdtI,QAAM,EAAE,eAFM;AAGd8E,QAHc;AAIdyD,YAAU,EAAE,CAJE;AAKdC,iBAAe,EAAE;AALH,CAAf,E;;;;;;;;;;;;AC/GA;AAAA;AAAA;AAEA,MAAMC,SAAS,GAAG,CAAC,2CAAD,EAA8C,4CAA9C,CAAlB;AAEA,MAAM3D,MAAM,GAAG,MAAMA,MAAN,SAAqB6B,6CAArB,CAAqC;AACnD5B,aAAW,GAAG;AACb;AACA,UAAM2D,SAAS,GAAGrB,MAAM,CAACC,QAAP,CAAgBqB,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAlB;AACA,SAAK5D,QAAL,GAAiB,WAAU0D,SAAU,aAArC;AACA;;AALkD,CAApD;AAQe;AACdJ,MAAI,EAAE,QADQ;AAEdtI,QAAM,EAAE,YAFM;AAGd8E,QAHc;;AAId+D,aAAW,CAACzB,IAAD,EAAO;AACjB,WAAOqB,SAAS,CAACK,IAAV,CAAeC,EAAE,IAAI3B,IAAI,CAACQ,UAAL,CAAgBmB,EAAhB,CAArB,CAAP;AACA,GANa;;AAOdlB,aAAW,GAAG;AACb,WAAOpC,OAAO,CAACvD,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAD,CAAd;AACA;;AATa,CAAf,E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEe,gEAAC6G,sDAAD,EAAYC,mDAAZ,EAAoBC,0DAApB,EAAmCC,uDAAnC,CAAf,E;;;;;;;;;;;;ACLA;AAAA;AAAA;AAEA,MAAMnE,QAAQ,GAAG,gCAAjB;AAEA,MAAMF,MAAM,GAAG,MAAMA,MAAN,SAAqB6B,6CAArB,CAAqC;AACnD5B,aAAW,GAAG;AACb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKE,cAAL,GAAsB,cAAtB;AACA;;AALkD,CAApD;AAQe;AACdoD,MAAI,EAAE,eADQ;AAEdtI,QAAM,EAAE,mBAFM;AAGd8E,QAHc;;AAId+D,aAAW,CAACzB,IAAD,EAAO;AACjB,WAAOA,IAAI,CAACQ,UAAL,CAAiB,GAAE5C,QAAS,gBAA5B,KAAgDoC,IAAI,CAACQ,UAAL,CAAiB,GAAE5C,QAAS,oBAA5B,CAAvD;AACA,GANa;;AAOd6C,aAAW,GAAG;AACb,WAAOpC,OAAO,CAACvD,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAD,CAAd;AACA;;AATa,CAAf,E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AACA;AAEA,MAAM;AAAEiH;AAAF,IAAgBC,mDAAtB;AAEA,MAAMrE,QAAQ,GAAG,6BAAjB,C,CAEA;AACA;;AAEA,MAAMF,MAAM,GAAG,MAAMA,MAAN,SAAqB6B,6CAArB,CAAqC;AACnD5B,aAAW,GAAG;AACb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA;;AAJkD,CAApD;AAOe;AACdsD,MAAI,EAAE,YADQ;AAEdtI,QAAM,EAAE,gBAFM;AAGd8E,QAHc;;AAId+D,aAAW,CAACzB,IAAD,EAAO;AACjB,WACCgC,SAAS,CAAC,cAAD,CAAT,KACChC,IAAI,CAACQ,UAAL,CAAiB,GAAE5C,QAAS,gBAA5B,KAAgDoC,IAAI,CAACQ,UAAL,CAAiB,GAAE5C,QAAS,oBAA5B,CADjD,CADD;AAIA,GATa;;AAUd6C,aAAW,GAAG;AACb,WAAOpC,OAAO,CAACvD,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAD,CAAd;AACA;;AAZa,CAAf,E","file":"drivers__m-flow.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport BaseDriver from '../base';\nimport bus from '../../bus';\nimport { format, DOM, log } from '../../../utils';\n\nconst { elemToFloat } = format;\nconst { extractElementFromHTML } = DOM;\n\nexport default class Driver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.BASE_URL = '';\n\t\tthis.EXISTING_CODE_SELECTOR = '#promotion_code';\n\t\tthis.TOTAL_SELECTOR = '.row3 .my_shop_price';\n\t\tthis.APPLY_PATHNAME = 'm-flow-a-cart.htm';\n\t\tthis.REMOVE_PATHNAME = 'm-flow-a-clearCoupon.htm';\n\t\tthis.parseTotalElementCallback = element => elemToFloat(element);\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [document.querySelector(this.EXISTING_CODE_SELECTOR).getAttribute('value')].filter(code =>\n\t\t\tBoolean(code),\n\t\t);\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tremoveCodes() {\n\t\treturn this._removeCode().then(responseHtml => this._parseTotal(responseHtml));\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog(`Original price: ${originalPrice}`);\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._applyCode(code, true).then(responseHtml => {\n\t\t\t\tconst finalPrice = this._parseTotal(responseHtml);\n\t\t\t\tconst finalDiscount = originalPrice - finalPrice;\n\t\t\t\treturn this._removeCode().then(() => bus.$emit('code-checked', { code, finalPrice, finalDiscount }));\n\t\t\t}),\n\t\t);\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this._applyCode(codes[0]);\n\t}\n\n\t_applyCode(code) {\n\t\treturn this._manageCode(`${this.APPLY_PATHNAME}?pcode=${code}`);\n\t}\n\n\t_removeCode() {\n\t\treturn this._manageCode(this.REMOVE_PATHNAME);\n\t}\n\n\t_manageCode(actionUrl) {\n\t\treturn fetch(`${this.BASE_URL}/${actionUrl}`, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.text());\n\t}\n\n\t_parseTotal(html) {\n\t\tlet totalElement = null;\n\t\tif (html) {\n\t\t\ttotalElement = extractElementFromHTML(html, this.TOTAL_SELECTOR);\n\t\t} else {\n\t\t\ttotalElement = document.querySelector(this.TOTAL_SELECTOR);\n\t\t}\n\t\treturn this.parseTotalElementCallback(totalElement);\n\t}\n}\n","import Promise from 'bluebird';\nimport MFlowBaseDriver from './_base';\nimport backgroundMessaging from '../../lib/background-messaging';\nimport { request, requestTypes, format, DOM } from '../../../utils';\n\nconst { elemToFloat } = format;\nconst { extractElement } = DOM;\n\n/* Behavior description:\n+ Existing code: yes\n+ Remove code: yes\n+ Stackable: no\n+ Free gift support: no\n+ Free shipping: no\n+ ‘isValid’ implemented: no\n+ Pages, where extension works: Cart\n+ Is driver SPA: yes\n+ Gather codes on site pages: no\n+ maxCoupons: 5, because of blocking\n+ allow testing, retesting, wait for 20 min to the next testing, because of blocking\n*/\n\nconst BASE_URL = 'https://cart.dresslily.com';\n\nconst Driver = class Driver extends MFlowBaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.BASE_URL = BASE_URL;\n\t\tthis.DOMAIN = 'dresslily.com';\n\t\tthis.EXISTING_CODE_SELECTOR = '#cart_summary_promotion_code';\n\t\tthis.TOTAL_SELECTOR = '.cart-summary-info li:last-child .my-shop-price';\n\t\tthis.EMPTY_CART_SELECTOR = '.cart-empty-box';\n\t\tthis.REMOVE_PATHNAME = 'fun/index.php?act=clearCoupon';\n\t\tthis.TOTAL_REG = /o.cart.total = {\"goods_price\":(\\d+\\.\\d+|\\d+)/;\n\t\tthis.DISABLE_TIME_MS = 20 * 60 * 1000; // 20 minutes\n\t\trequest.setType(requestTypes.embedded);\n\t}\n\n\tasync checkCondition() {\n\t\tconst { href } = window.location;\n\t\tlet isNotMaxCodeTesting = true;\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(this.DOMAIN);\n\t\tif (driverStorage) {\n\t\t\tconst dataExpired = Date.now() - driverStorage.lastTestTimestamp >= this.DISABLE_TIME_MS;\n\t\t\tif (dataExpired) {\n\t\t\t\tbackgroundMessaging.deleteDriverStorage(this.DOMAIN);\n\t\t\t} else {\n\t\t\t\tisNotMaxCodeTesting = driverStorage.codeTestingCount < 2;\n\t\t\t}\n\t\t}\n\n\t\tconst isOnRightURL =\n\t\t\thref.startsWith(`${BASE_URL}/shopping-cart`) || href.startsWith(`${BASE_URL}/m-flow-a-cart.htm`);\n\t\tconst isCartEmpty = (document.querySelector(this.EMPTY_CART_SELECTOR) || {}).offsetParent;\n\t\tconst isCodeInput = (document.querySelector(this.EXISTING_CODE_SELECTOR) || {}).offsetParent;\n\t\treturn isOnRightURL && !isCartEmpty && isCodeInput && isNotMaxCodeTesting;\n\t}\n\n\tremoveCodes() {\n\t\treturn this._removeCode()\n\t\t\t.then(() => this._getUpdatedCart())\n\t\t\t.then(responseHtml => this._parseTotal(responseHtml));\n\t}\n\n\tasync beforeApplyCodes() {\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(this.DOMAIN);\n\t\tconst codeTestingCount = driverStorage ? driverStorage.codeTestingCount : 0;\n\t\tbackgroundMessaging.setDriverStorage(this.DOMAIN, {\n\t\t\tcodeTestingCount: codeTestingCount + 1,\n\t\t\tlastTestTimestamp: Date.now(),\n\t\t});\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\t// on Cart page aren't any tax or shipping\n\t\treturn this._getUpdatedCart().then(response => this._parseTotal(response));\n\t}\n\n\t_manageCode(actionUrl) {\n\t\tconst requestOptions = {\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t\t'x-requested-with': 'XMLHttpRequest',\n\t\t\t},\n\t\t};\n\t\t// need to use delay and request type embedded, due to blocking\n\t\treturn Promise.delay(1000).then(() =>\n\t\t\trequest\n\t\t\t\t.get(`${this.BASE_URL}/${actionUrl}&_=${Date.now()}`, requestOptions)\n\t\t\t\t.then(response => response.text()),\n\t\t);\n\t}\n\n\t_getUpdatedCart() {\n\t\treturn fetch(window.location.href, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t\t'upgrade-insecure-requests': 1,\n\t\t\t},\n\t\t}).then(response => response.text());\n\t}\n\n\t_parseTotal(html) {\n\t\tif (html) {\n\t\t\treturn parseFloat(html.match(this.TOTAL_REG)[1]);\n\t\t}\n\t\treturn elemToFloat(extractElement(this.TOTAL_SELECTOR));\n\t}\n};\n\nexport default {\n\tname: 'dresslily',\n\tdomain: 'dresslily.com',\n\tDriver,\n\tmaxCoupons: 5,\n\tisSinglePageApp: true,\n};\n","import MFlowBaseDriver from './_base';\n\nconst CART_URLS = ['https://cart.gamiss.com/m-flow-a-cart.htm', 'https://login.gamiss.com/m-flow-a-cart.htm'];\n\nconst Driver = class Driver extends MFlowBaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tconst subdomain = window.location.host.split('.')[0];\n\t\tthis.BASE_URL = `https://${subdomain}.gamiss.com`;\n\t}\n};\n\nexport default {\n\tname: 'Gamiss',\n\tdomain: 'gamiss.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\treturn CART_URLS.some(el => href.startsWith(el));\n\t},\n\tisCartEmpty() {\n\t\treturn Boolean(document.querySelector('#cartWrap .empty'));\n\t},\n};\n","import dresslily from './dresslily.com';\nimport gamiss from './gamiss.com';\nimport rosewholesale from './rosewholesale.com';\nimport sammydress from './sammydress.com';\n\nexport default [dresslily, gamiss, rosewholesale, sammydress];\n","import MFlowBaseDriver from './_base';\n\nconst BASE_URL = 'https://cart.rosewholesale.com';\n\nconst Driver = class Driver extends MFlowBaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.BASE_URL = BASE_URL;\n\t\tthis.TOTAL_SELECTOR = '#price_total';\n\t}\n};\n\nexport default {\n\tname: 'RoseWholesale',\n\tdomain: 'rosewholesale.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\treturn href.startsWith(`${BASE_URL}/shopping-cart`) || href.startsWith(`${BASE_URL}/m-flow-a-cart.htm`);\n\t},\n\tisCartEmpty() {\n\t\treturn Boolean(document.querySelector('.noGoods'));\n\t},\n};\n","import MFlowBaseDriver from './_base';\nimport { browserUtils } from '../../../utils';\n\nconst { getCookie } = browserUtils;\n\nconst BASE_URL = 'https://cart.sammydress.com';\n\n// Only logged in users can apply codes\n// Checking user_id cookie for that\n\nconst Driver = class Driver extends MFlowBaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.BASE_URL = BASE_URL;\n\t}\n};\n\nexport default {\n\tname: 'SammyDress',\n\tdomain: 'sammydress.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\treturn (\n\t\t\tgetCookie('WEBF-user_id') &&\n\t\t\t(href.startsWith(`${BASE_URL}/shopping-cart`) || href.startsWith(`${BASE_URL}/m-flow-a-cart.htm`))\n\t\t);\n\t},\n\tisCartEmpty() {\n\t\treturn Boolean(document.querySelector('#cartWrap .empty'));\n\t},\n};\n"],"sourceRoot":""}