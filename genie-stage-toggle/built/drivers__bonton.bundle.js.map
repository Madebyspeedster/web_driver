{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/bonton/_base.js","webpack:///./src/inject/drivers/bonton/bostonstore.com.js","webpack:///./src/inject/drivers/bonton/carsons.com.js","webpack:///./src/inject/drivers/bonton/dorcousa.com.js","webpack:///./src/inject/drivers/bonton/index.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","elemToFloat","extractElement","DOM","BontonDriver","constructor","TOTAL_SELECTOR","APPLIED_CODE_SELECTOR","DOMAIN_NAME","REQUEST_DATA","URLSearchParams","include","INPUT_CODE_FIELD_SELECTOR","isStackable","href","window","location","isOnCheckout","includes","isInputCodeField","Boolean","CHECKOUT_ID","scripts","find","script","text","requestUrl","querySelectorAll","filter","map","element","innerText","length","lastResponse","each","code","_removeCode","response","_parseTotal","originalPrice","workingDiscounts","_applyCode","responseJSON","result","finalPrice","finalDiscount","isValid","status","push","discount","discounts","validationInfo","sort","a","b","currentPrice","currentDiscount","successfulCodes","_manageCode","isApply","data","JSON","stringify","couponCode","url","toString","fetch","credentials","body","json","grandTotal","Driver","name","stackable","isSinglePageApp","isOnCartUrl","BASE_URL","CART_URL","IS_ON_CART","startsWith","PRICES_SELECTOR","PRICE_SELECTOR","TOTAL_PRICE","_findElement","targetString","targetEl","el","_getPreTaxShippingTotal","taxEl","tax","shippingEl","shipping","total","DriverOnCart","DELETE_CODE_SELECTOR","CODE_REGEX","params","CART_EMPTY_SELECTOR","CODE_INPUT_SELECTOR","CART_REMOVE_CODES_BTN_SELECTOR","isCodeInputFld","isRemoveCodeBtn","isCartEmpty","codeMatch","_getUpdatedCart","appliedCode","updatedCart","removeURL","set","endPoint","URL","headers","DriverOnCheckout","bostonstore","carsons","dorcousa"],"mappings":"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","file":"drivers__bonton.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport BaseDriver from '../base';\nimport bus from '../../bus';\nimport { format, DOM, log } from '../../../utils';\n\nconst { elemToFloat, toFloat } = format;\nconst { extractElement } = DOM;\n\nexport default class BontonDriver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.TOTAL_SELECTOR = '.cart-priceItem--total [data-test=\"cart-price-value\"]';\n\t\tthis.APPLIED_CODE_SELECTOR = '.cart-priceItem-postFix';\n\n\t\t// Should be defined in driver\n\t\tthis.DOMAIN_NAME = '';\n\n\t\tthis.REQUEST_DATA = new URLSearchParams({\n\t\t\tinclude:\n\t\t\t\t'cart.lineItems.physicalItems.options%2Ccart.lineItems.digitalItems.options%2Ccustomer%2Cpayments%2Cpromotions.banners',\n\t\t});\n\n\t\tthis.INPUT_CODE_FIELD_SELECTOR = '#redeemableCode, .redeemable-label';\n\n\t\tthis.isStackable = true;\n\t}\n\n\tcheckCondition() {\n\t\tconst { href } = window.location;\n\t\tconst isOnCheckout = href.includes(this.DOMAIN_NAME) && href.includes('/checkout');\n\t\tconst isInputCodeField = Boolean(extractElement(this.INPUT_CODE_FIELD_SELECTOR));\n\t\treturn isOnCheckout && isInputCodeField;\n\t}\n\n\tbeforeTestCodes() {\n\t\t[, this.CHECKOUT_ID] = [...document.scripts]\n\t\t\t.find(script => script.text.match(/CHECKOUT_ID/))\n\t\t\t.text.match(/CHECKOUT_ID', '(.*?)'/);\n\t\tthis.requestUrl = `https:///www.${this.DOMAIN_NAME}/api/storefront/checkouts/${this.CHECKOUT_ID}/coupons`;\n\t\treturn Promise.resolve();\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [...document.querySelectorAll(this.APPLIED_CODE_SELECTOR)]\n\t\t\t.filter(Boolean)\n\t\t\t.map(element => element.innerText);\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tremoveCodes(codes) {\n\t\tlet lastResponse = null;\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._removeCode(code).then(response => {\n\t\t\t\tlastResponse = response;\n\t\t\t\treturn Promise.resolve();\n\t\t\t}),\n\t\t).then(() => this._parseTotal(lastResponse));\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog(`Original price: ${originalPrice}`);\n\t\tconst workingDiscounts = [];\n\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._applyCode(code).then(responseJSON => {\n\t\t\t\tconst result = {\n\t\t\t\t\tcode,\n\t\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\t\tfinalDiscount: 0,\n\t\t\t\t\tisValid: true,\n\t\t\t\t};\n\t\t\t\tif (responseJSON.status === 404 || responseJSON.status === 400) {\n\t\t\t\t\tresult.isValid = false;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\t\t\t\tresult.finalPrice = this._parseTotal(responseJSON);\n\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\n\t\t\t\tif (result.finalPrice < originalPrice) {\n\t\t\t\t\tworkingDiscounts.push(result);\n\t\t\t\t}\n\t\t\t\treturn this._removeCode(code).then(() => bus.$emit('code-checked', result));\n\t\t\t}),\n\t\t).then(() => {\n\t\t\tif (this.isStackable) {\n\t\t\t\tbus.$emit('stack-codes', {\n\t\t\t\t\tcodes: workingDiscounts.map(discount => discount.code),\n\t\t\t\t\tdiscounts: workingDiscounts,\n\t\t\t\t\toriginalPrice,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tstackCodes(validationInfo) {\n\t\tconst { discounts, originalPrice } = validationInfo;\n\n\t\tdiscounts.sort((a, b) => b.finalDiscount - a.finalDiscount);\n\n\t\tlet currentPrice = originalPrice;\n\t\tlet currentDiscount = 0;\n\t\tconst successfulCodes = [];\n\n\t\treturn Promise.each(discounts, discount =>\n\t\t\tthis._applyCode(discount.code).then(responseJSON => {\n\t\t\t\tconst finalPrice = this._parseTotal(responseJSON);\n\t\t\t\tconst finalDiscount = originalPrice - finalPrice;\n\t\t\t\tbus.$emit('code-stacked', { code: discount.code, finalPrice, finalDiscount });\n\t\t\t\tif (finalPrice < currentPrice) {\n\t\t\t\t\tsuccessfulCodes.push(discount.code);\n\t\t\t\t\tcurrentDiscount = finalDiscount;\n\t\t\t\t\tcurrentPrice = finalPrice;\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t\treturn this._removeCode(discount.code);\n\t\t\t}),\n\t\t).then(() =>\n\t\t\tbus.$emit('stackable-complete', {\n\t\t\t\tcodes: successfulCodes,\n\t\t\t\tfinalPrice: currentPrice,\n\t\t\t\tfinalDiscount: currentDiscount,\n\t\t\t}),\n\t\t);\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this.isStackable ? Promise.resolve() : this._applyCode(codes[0]);\n\t}\n\n\t_applyCode(code) {\n\t\treturn this._manageCode('POST', code);\n\t}\n\n\t_removeCode(code) {\n\t\treturn this._manageCode('DELETE', code, false);\n\t}\n\n\t_manageCode(method, code, isApply = true) {\n\t\tconst data = JSON.stringify({\n\t\t\tcouponCode: code,\n\t\t});\n\t\tconst url = `${this.requestUrl}${isApply ? '' : `/${code}`}?${this.REQUEST_DATA.toString()}`;\n\t\treturn fetch(url, {\n\t\t\tmethod,\n\t\t\tcredentials: 'include',\n\t\t\tbody: isApply ? data : null,\n\t\t}).then(response => response.json());\n\t}\n\n\t_parseTotal(data) {\n\t\tif (data) {\n\t\t\treturn toFloat(data.grandTotal);\n\t\t}\n\t\treturn elemToFloat(extractElement(this.TOTAL_SELECTOR));\n\t}\n}\n","import BontonDriver from './_base';\n\nconst Driver = class Driver extends BontonDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.DOMAIN_NAME = 'bostonstore.com';\n\t}\n};\n\nexport default {\n\tname: 'Boston Store',\n\tdomain: 'bostonstore.com',\n\tstackable: true,\n\tisSinglePageApp: true,\n\tDriver,\n\tisOnCartUrl() {\n\t\treturn false;\n\t},\n};\n","import BontonDriver from './_base';\n\nconst Driver = class Driver extends BontonDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.DOMAIN_NAME = 'carsons.com';\n\t}\n};\n\nexport default {\n\tname: \"Carson's\",\n\tdomain: 'carsons.com',\n\tstackable: true,\n\tisSinglePageApp: true,\n\tDriver,\n\tisOnCartUrl() {\n\t\treturn false;\n\t},\n};\n","import Promise from 'bluebird';\nimport BontonDriver from './_base';\nimport BaseDriver from '../base';\n\nimport bus from '../../bus';\nimport { log, format, DOM } from '../../../utils';\n\nconst { extractElement } = DOM;\nconst { elemToFloat } = format;\n\n/* Driver behavior description:\n•    Existing code: yes\n•    Remove code: yes\n•    Stackable: no\n•    Free gift support: no\n•    ‘isValid’ implemented: yes\n•    Manually apply code: no\n•    Pages, where extension works: Cart, Checkout\nOptional:\n•    Show message about free shipping on the cart page (without discount info): no\n•    Is driver SPA and add the condition to show popup: yes\n•    Gather codes on site pages: no */\n\nconst BASE_URL = 'https://www.dorcousa.com';\nconst CART_URL = `${BASE_URL}/cart.php`;\n\nconst IS_ON_CART = window.location.href.startsWith(CART_URL);\n\nconst PRICES_SELECTOR = '.cart-totals .cart-total';\nconst PRICE_SELECTOR = '.cart-total-value';\nconst TOTAL_PRICE = '.cart-total-value.cart-total-grandTotal span';\n\nconst _findElement = (targetString, response) => {\n\tconst targetEl = [...extractElement(PRICES_SELECTOR, response, true)].find(el =>\n\t\tel.textContent.includes(targetString),\n\t);\n\treturn targetEl ? targetEl.querySelector(PRICE_SELECTOR) : null;\n};\n\nconst _getPreTaxShippingTotal = response => {\n\tconst taxEl = _findElement('Tax', response);\n\tconst tax = taxEl ? elemToFloat(taxEl) : 0;\n\tconst shippingEl = _findElement('Shipping', response);\n\tconst shipping = shippingEl ? elemToFloat(shippingEl) || 0 : 0;\n\tconst total = elemToFloat(extractElement(TOTAL_PRICE, response));\n\treturn total - tax - shipping;\n};\n\nconst DriverOnCart = class Driver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.TOTAL_PRICE = '.cart-total-value.cart-total-grandTotal span';\n\t\tthis.APPLIED_CODE_SELECTOR = '.cart-total strong';\n\t\tthis.DELETE_CODE_SELECTOR = '.cart-total-label a';\n\t\tthis.CODE_REGEX = /Coupon \\(([^)]+)\\)/;\n\t\tthis.params = new URLSearchParams();\n\n\t\tthis.CART_EMPTY_SELECTOR = '.content-container > div:only-of-type';\n\t\tthis.CODE_INPUT_SELECTOR = '#couponcode';\n\t\tthis.CART_REMOVE_CODES_BTN_SELECTOR = '[href*=\"cart.php?action=removecoupon\"]';\n\t}\n\n\tcheckCondition() {\n\t\tconst isCodeInputFld = Boolean(document.querySelector(this.CODE_INPUT_SELECTOR));\n\t\tconst isRemoveCodeBtn = Boolean(document.querySelector(this.CART_REMOVE_CODES_BTN_SELECTOR));\n\t\tconst isCartEmpty = Boolean(document.querySelector(this.CART_EMPTY_SELECTOR));\n\t\treturn (isCodeInputFld || isRemoveCodeBtn) && !isCartEmpty;\n\t}\n\n\tgetExistingCodes() {\n\t\tconst codes = [...document.querySelectorAll(this.APPLIED_CODE_SELECTOR)]\n\t\t\t.map(el => {\n\t\t\t\tconst codeMatch = el.innerText.match(this.CODE_REGEX);\n\t\t\t\treturn codeMatch ? codeMatch[1] : null;\n\t\t\t})\n\t\t\t.filter(Boolean);\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tremoveCodes() {\n\t\treturn this._removeCode(document.querySelector(this.DELETE_CODE_SELECTOR).getAttribute('href'))\n\t\t\t.then(() => this._getUpdatedCart())\n\t\t\t.then(response => this._parseTotal(response));\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog('originalPrice: %s', originalPrice);\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._applyCode(code).then(appliedCode => {\n\t\t\t\tconst result = { code, finalPrice: originalPrice, finalDiscount: 0 };\n\t\t\t\tif (appliedCode.data.status !== 'success') {\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\t\t\t\treturn this._getUpdatedCart().then(updatedCart => {\n\t\t\t\t\tresult.finalPrice = this._parseTotal(updatedCart);\n\t\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\t\tconst removeURL = extractElement(this.DELETE_CODE_SELECTOR, updatedCart);\n\t\t\t\t\treturn this._removeCode(removeURL.getAttribute('href')).then(() =>\n\t\t\t\t\t\tbus.$emit('code-checked', result),\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}),\n\t\t);\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this._applyCode(codes[0]);\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getUpdatedCart().then(response => _getPreTaxShippingTotal(response));\n\t}\n\n\t_applyCode(code) {\n\t\tthis.params.set('code', code);\n\t\treturn this._manageCode(`${BASE_URL}/remote/v1/apply-code`, 'POST', this.params).then(response =>\n\t\t\tresponse.json(),\n\t\t);\n\t}\n\n\t_removeCode(endPoint) {\n\t\treturn this._manageCode(`${BASE_URL}${endPoint}`, 'GET');\n\t}\n\n\t_getUpdatedCart() {\n\t\treturn this._manageCode(CART_URL, 'GET').then(response => response.text());\n\t}\n\n\t_manageCode(URL, method, params) {\n\t\treturn fetch(URL, {\n\t\t\tmethod,\n\t\t\tbody: params || null,\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t\t'x-requested-with': 'XMLHttpRequest',\n\t\t\t},\n\t\t});\n\t}\n\n\t_parseTotal(data) {\n\t\treturn elemToFloat(extractElement(this.TOTAL_PRICE, data));\n\t}\n};\n\nconst DriverOnCheckout = class Driver extends BontonDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.DOMAIN_NAME = 'dorcousa.com';\n\t\tthis.isStackable = false;\n\t\tthis.INPUT_CODE_FIELD_SELECTOR = '[name=\"redeemableCode\"], .redeemable-label';\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getUpdatedCart().then(response => _getPreTaxShippingTotal(response));\n\t}\n\n\t_getUpdatedCart() {\n\t\treturn fetch(CART_URL, {\n\t\t\tmethod: 'GET',\n\t\t}).then(response => response.text());\n\t}\n};\n\nexport default {\n\tname: 'Dorco',\n\tdomain: 'dorcousa.com',\n\tisSinglePageApp: true,\n\tDriver: IS_ON_CART ? DriverOnCart : DriverOnCheckout,\n};\n","import bostonstore from './bostonstore.com';\nimport carsons from './carsons.com';\nimport dorcousa from './dorcousa.com';\n\nexport default [bostonstore, carsons, dorcousa];\n"],"sourceRoot":""}