{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/famousfootwear/_base.js","webpack:///./src/inject/drivers/famousfootwear/drschollsshoes.com.js","webpack:///./src/inject/drivers/famousfootwear/famousfootwear.com.js","webpack:///./src/inject/drivers/famousfootwear/index.js","webpack:///./src/inject/drivers/famousfootwear/naturalizer.com.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","extractFromHTML","DOM","Driver","constructor","merchantUrl","protocolMatch","window","location","href","protocolType","isOnCheckout","Boolean","toLowerCase","includes","bodyParams","_generateBodyParams","fetchURL","_applyCode","originalPrice","_parseTotal","each","code","result","finalPrice","finalDiscount","responseHTML","appliedCode","toUpperCase","data","codeElement","elemMatch","codeElem","innerText","length","totalSelector","total","URLSearchParams","set","tokenInput","reqToken","_manageCode","fetch","credentials","headers","body","response","text","DriverTemplate","CHARGES_REGEX","CHARGES_SELECTOR","bestCode","cartStr","taxes","extractElement","summary","filter","el","parentElement","map","elemToFloat","reduce","charges","charge","name","isOnCartUrl","hrefLowerCase","DOMAIN","BASE_API_URL","CODE_INPUT_SELECTOR","EMPTY_CART_SELECTOR","EXISTING_CODE_SELECTOR","APPLIED_CODE_REGEX","SUMMARY_ITEMS_SELECTOR","SUMMARY_VALUE_SELECTOR","correctUrl","codeInput","emptyCart","appliedCodes","currentCodeApplied","some","requestCode","_getCartPage","taxValue","shipping","shippingValue","isNaN","totalValue","isSinglePageApp","drschollsshoes","famousfootwear","naturalizer"],"mappings":"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","file":"drivers__famousfootwear.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport BaseDriver from '../base';\nimport bus from '../../bus';\nimport { format, DOM } from '../../../utils';\n\nconst { toFloat } = format;\nconst { extractFromHTML } = DOM;\n\nexport default class Driver extends BaseDriver {\n\tconstructor(merchantUrl) {\n\t\tsuper();\n\t\tconst protocolMatch = window.location.href.match(/([^:]+):\\/\\//);\n\t\tlet protocolType = null;\n\t\tif (protocolMatch) {\n\t\t\t[, protocolType] = protocolMatch;\n\t\t}\n\t\tthis.isOnCheckout = Boolean(window.location.href.toLowerCase().includes('/checkout/checkout'));\n\t\tthis.bodyParams = this._generateBodyParams();\n\t\tthis.fetchURL = this.isOnCheckout\n\t\t\t? `https://secure.${merchantUrl}Checkout/AddPromoCode`\n\t\t\t: `${protocolType}://www.${merchantUrl}Cart/AddPromoCode`;\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this._applyCode(codes[0], this.bodyParams, this.fetchURL);\n\t}\n\n\tcheckCodes(codes) {\n\t\tconst originalPrice = this._parseTotal();\n\t\treturn Promise.each(codes, code => {\n\t\t\t// `Number.MAX_SAFE_INTEGER` is used to avoid the best code replacement\n\t\t\t// with the worst one if it was applied before our checking\n\t\t\t// because in this case original price would be the best one,\n\t\t\t// and first invalid code in our list may become the best so it could be distractive\n\t\t\tconst result = { code, finalPrice: Number.MAX_SAFE_INTEGER, finalDiscount: 0 };\n\t\t\treturn this._applyCode(code, this.bodyParams, this.fetchURL)\n\t\t\t\t.then(responseHTML => {\n\t\t\t\t\tconst appliedCode = this.getExistingCodes(responseHTML).codes[0];\n\t\t\t\t\tif (appliedCode) {\n\t\t\t\t\t\tappliedCode.toUpperCase();\n\t\t\t\t\t}\n\t\t\t\t\tif (appliedCode === code.toUpperCase()) {\n\t\t\t\t\t\tresult.finalPrice = this._parseTotal(responseHTML);\n\t\t\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t\t// codes can't be removed\n\t\t\t\t})\n\t\t\t\t.then(() => bus.$emit('code-checked', result));\n\t\t});\n\t}\n\n\tgetExistingCodes(data) {\n\t\tconst elemSelector = data ? '.summary-item:nth-child(2) .left' : '.promo-feedback-content-cell strong';\n\t\tlet codeElement = null;\n\t\tif (data) {\n\t\t\tconst elemMatch = extractFromHTML(data, elemSelector).match(/Promo (.*) Applied/);\n\t\t\tcodeElement = elemMatch ? elemMatch[1] : false;\n\t\t} else {\n\t\t\tconst codeElem = document.querySelector(elemSelector);\n\t\t\tcodeElement = codeElem ? codeElem.innerText : false;\n\t\t}\n\t\tconst codes = codeElement ? [codeElement] : [];\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\t_parseTotal(data) {\n\t\tconst totalSelector = this.isOnCheckout ? '#order-total' : '.order-summary-total .right';\n\t\tlet total = null;\n\t\tif (data) {\n\t\t\ttotal = extractFromHTML(data, totalSelector);\n\t\t} else {\n\t\t\ttotal = document.querySelector(totalSelector).innerText;\n\t\t}\n\t\treturn toFloat(total);\n\t}\n\n\t_generateBodyParams() {\n\t\tconst bodyParams = new URLSearchParams();\n\t\tbodyParams.set('RewardsNumber', '');\n\t\tbodyParams.set('X-Requested-With', 'XMLHttpRequest');\n\t\tif (this.isOnCheckout) {\n\t\t\tconst tokenInput = document.querySelector('input[name=\"__RequestVerificationToken\"]');\n\t\t\tlet reqToken = null;\n\t\t\tif (tokenInput) {\n\t\t\t\treqToken = tokenInput.value;\n\t\t\t}\n\t\t\tbodyParams.set('__RequestVerificationToken', reqToken);\n\t\t}\n\t\treturn bodyParams;\n\t}\n\n\t_manageCode(code, bodyParams, fetchURL) {\n\t\tbodyParams.set('PromoCode', code);\n\t\treturn fetch(fetchURL, {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n\t\t\t\t'X-Requested-With': 'XMLHttpRequest',\n\t\t\t},\n\t\t\tbody: bodyParams,\n\t\t}).then(response => response.text());\n\t}\n\n\t_applyCode(code, bodyParams, fetchURL) {\n\t\treturn this._manageCode(code, bodyParams, fetchURL);\n\t}\n}\n","import DriverTemplate from './_base';\nimport { extractElement } from '../../../utils/DOM';\nimport { elemToFloat } from '../../../utils/format';\n\n/**\n * Driver behavior description:\n -    Existing code: yes\n -    Remove code: yes\n -    Stackable: no\n -    Free gift support: no\n -    ‘isValid’ implemented: no\n Optional:\n -    Show message about free shipping on the cart page (without discount info): no\n -    Is driver SPA and add the condition to show popup: no\n -    test codes on the cart page\n */\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper('drschollsshoes.com/Checkout/');\n\t\tthis.CHARGES_REGEX = /(shipping|tax)/i;\n\t\tthis.CHARGES_SELECTOR = '.order-summary-items-containers div.right';\n\t}\n\n\tapplyCodes(codes) {\n\t\t[this.bestCode] = codes;\n\t\treturn this._applyCode(codes[0], this.bodyParams, this.fetchURL);\n\t}\n\n\tasync getPreTaxShippingTotal() {\n\t\tconst cartStr = await this._applyCode(this.bestCode || 'fake', this.bodyParams, this.fetchURL);\n\t\tconst total = this._parseTotal(cartStr);\n\t\tconst taxes = [...extractElement(this.CHARGES_SELECTOR, cartStr.summary, true)]\n\t\t\t.filter(el => el.parentElement.textContent.match(this.CHARGES_REGEX))\n\t\t\t.map(elemToFloat)\n\t\t\t.filter(Boolean)\n\t\t\t.reduce((charges, charge) => charges + charge, 0); // shipping & tax might not be counted on cart\n\t\treturn total - taxes;\n\t}\n};\n\nexport default {\n\tname: \"Dr. Scholl's Shoes\",\n\tdomain: 'drschollsshoes.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\tconst hrefLowerCase = href.toLowerCase();\n\t\treturn (\n\t\t\threfLowerCase.includes('www.drschollsshoes.com/checkout/cart') ||\n\t\t\threfLowerCase.includes('https://secure.drschollsshoes.com/checkout/checkout')\n\t\t);\n\t},\n};\n","import Promise from 'bluebird';\nimport DriverTemplate from './_base';\nimport bus from '../../bus';\nimport { log, DOM, format } from '../../../utils';\n\nconst { extractElement } = DOM;\nconst { toFloat } = format;\n\nconst DOMAIN = 'famousfootwear.com';\n\n/**\nDriver behavior:\n•   Existing code: yes\n•   Remove code: no\n•   Code retesting: no, because we can't remove existing code\n•   Stackable: no\n•   Free gift support: no\n•   isValid implemented: no\n•   Show message about free shipping: no\n•   Driver is SPA: yes, on cart & checkout when code input is present\n•   Gather merchant codes: yes\n•   Special case: user will be redirected to 1st step on checkout after codes testing, data should be saved though\n */\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.BASE_API_URL = `https://www.${DOMAIN}`;\n\n\t\tthis.CODE_INPUT_SELECTOR = '#PromoCode, #promoCodeInput';\n\t\tthis.EMPTY_CART_SELECTOR = '.empty-state-card';\n\t\tthis.EXISTING_CODE_SELECTOR = '#order-summary .item, .summary-item';\n\t\tthis.APPLIED_CODE_REGEX = /promo\\s+([A-Z0-9]+)/i;\n\n\t\tthis.SUMMARY_ITEMS_SELECTOR = '.summary-item, #order-summary .item';\n\t\tthis.SUMMARY_VALUE_SELECTOR = '.right, .amount';\n\t}\n\n\tcheckCondition() {\n\t\tconst hrefLowerCase = window.location.href.toLowerCase();\n\t\tconst correctUrl =\n\t\t\threfLowerCase.includes(`www.${DOMAIN}/checkout/cart`) ||\n\t\t\threfLowerCase.includes(`www.${DOMAIN}/checkout/checkout`);\n\t\tconst codeInput = document.querySelector(this.CODE_INPUT_SELECTOR);\n\t\tconst emptyCart = document.querySelector(this.EMPTY_CART_SELECTOR);\n\t\treturn correctUrl && !emptyCart && codeInput;\n\t}\n\n\tbeforeTestCodes() {\n\t\tthis.fetchURL = this.isOnCheckout\n\t\t\t? `${this.BASE_API_URL}/Checkout/Checkout/AddPromoCode`\n\t\t\t: `${this.BASE_API_URL}/Checkout/Cart/AddPromoCode`;\n\t}\n\n\tgetExistingCodes(data) {\n\t\tconst codes = [...extractElement(this.EXISTING_CODE_SELECTOR, data, true)]\n\t\t\t.map(el => el.innerText.match(this.APPLIED_CODE_REGEX))\n\t\t\t.filter(match => match && match.length > 1)\n\t\t\t.map(match => match[1]);\n\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tlog(`Orginal price: ${originalPrice}`);\n\t\treturn Promise.each(codes, async code => {\n\t\t\t// `Number.MAX_SAFE_INTEGER` is used to avoid the best code replacement\n\t\t\tconst result = { code, finalPrice: Number.MAX_SAFE_INTEGER, finalDiscount: 0 };\n\t\t\tconst responseHTML = await this._applyCode(code, this.bodyParams, this.fetchURL);\n\t\t\tconst appliedCodes = this.getExistingCodes(responseHTML);\n\t\t\tconst currentCodeApplied = appliedCodes.codes.some(\n\t\t\t\trequestCode => requestCode.toUpperCase() === code.toUpperCase(),\n\t\t\t);\n\t\t\tif (!currentCodeApplied) {\n\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t}\n\t\t\tresult.finalPrice = this._parseTotal(responseHTML);\n\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\t\t\treturn bus.$emit('code-checked', result);\n\t\t});\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\treturn this._getCartPage().then(responseHTML => {\n\t\t\tconst taxValue = [...extractElement(this.SUMMARY_ITEMS_SELECTOR, responseHTML, true)]\n\t\t\t\t.filter(el => el.textContent.includes('Tax'))\n\t\t\t\t.map(el => toFloat(el.querySelector(this.SUMMARY_VALUE_SELECTOR).innerText));\n\n\t\t\tconst shipping = [...extractElement(this.SUMMARY_ITEMS_SELECTOR, responseHTML, true)]\n\t\t\t\t.filter(el => el.textContent.includes('Shipping') || el.textContent.includes('In-Store Pickup'))\n\t\t\t\t.map(el => toFloat(el.querySelector(this.SUMMARY_VALUE_SELECTOR).innerText));\n\n\t\t\t// shipping is included only on Checkout\n\t\t\tconst shippingValue = !this.isOnCheckout || Number.isNaN(shipping[0]) ? 0 : shipping[0];\n\t\t\tconst totalValue = this._parseTotal(responseHTML);\n\t\t\treturn totalValue - taxValue[0] - shippingValue;\n\t\t});\n\t}\n\n\t_getCartPage() {\n\t\treturn fetch(window.location.href, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.text());\n\t}\n};\n\nexport default {\n\tname: 'Famous Footwear',\n\tdomain: 'famousfootwear.com',\n\tDriver,\n\tisSinglePageApp: true,\n};\n","import drschollsshoes from './drschollsshoes.com';\nimport famousfootwear from './famousfootwear.com';\nimport naturalizer from './naturalizer.com';\n\nexport default [drschollsshoes, famousfootwear, naturalizer];\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper('naturalizer.com/Checkout/');\n\t}\n};\n\nexport default {\n\tname: 'Naturalizer',\n\tdomain: 'naturalizer.com',\n\tDriver,\n\tisOnCartUrl(href) {\n\t\tconst hrefLowerCase = href.toLowerCase();\n\t\treturn (\n\t\t\threfLowerCase.includes('www.naturalizer.com/checkout/cart') ||\n\t\t\threfLowerCase.includes('https://secure.naturalizer.com/checkout/checkout')\n\t\t);\n\t},\n};\n"],"sourceRoot":""}