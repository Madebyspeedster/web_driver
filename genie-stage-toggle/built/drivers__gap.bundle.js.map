{"version":3,"sources":["webpack:///./src/inject/drivers/base.js","webpack:///./src/inject/drivers/gap/_base.js","webpack:///./src/inject/drivers/gap/athleta.com.js","webpack:///./src/inject/drivers/gap/bananarepublic.ca.js","webpack:///./src/inject/drivers/gap/bananarepublic.com.js","webpack:///./src/inject/drivers/gap/bananarepublicfactory.com.js","webpack:///./src/inject/drivers/gap/gap.com.js","webpack:///./src/inject/drivers/gap/gapcanada.ca.js","webpack:///./src/inject/drivers/gap/gapfactory.com.js","webpack:///./src/inject/drivers/gap/index.js","webpack:///./src/inject/drivers/gap/oldnavy.ca.js","webpack:///./src/inject/drivers/gap/oldnavy.com.js"],"names":["toFloat","format","BaseDriver","watchForRestoreUserData","time","pauseInterval","interval","setInterval","currentState","checkRestoreDataCondition","clearInterval","bus","$emit","e","handleDriverError","source","storeUserData","domain","userData","getUserData","Promise","resolve","userDataKey","getUserDataStorageKey","storageRecord","storedTime","Date","now","backgroundMessaging","setDriverStorage","log","restoreUserData","maxStorageLifetime","driverStorage","getDriverStorage","deleteDriverStorage","setUserData","getStartPrice","startPrice","Number","MAX_SAFE_INTEGER","totalElementConfig","TOTAL_ELEMENT_CONFIG","selector","attribute","regex","totalElement","Array","isArray","forEach","elemSelector","document","querySelector","Error","value","getAttribute","textContent","pattern","group","match","beforeTestCodes","beforeCheckCodes","beforeApplyCodes","checkCodes","applyCodes","stackCodes","removeCodes","getMerchantCodes","getExistingCodes","codes","codeCount","getPreTaxShippingTotal","watchForCartUrl","previousState","checkCondition","completeExperience","completeExperiencePromisified","args","_promisify","beforeTestCodesPromisified","getStartPricePromisified","getMerchantCodesPromisified","getExistingCodesPromisified","removeCodesPromisified","beforeApplyCodesPromisified","applyCodesPromisified","beforeCheckCodesPromisified","checkCodesPromisified","stackCodesPromisified","method","then","apply","getCookie","browserUtils","Driver","constructor","TOTAL_SELECTOR","APPLIED_PROMOTION_SELECTOR","APPLIED_PROMOCODE_SELECTOR","PROMO_CODE_INPUT_SELECTOR","EMPTY_EL_SELECTOR","APPLIED_CODE_SELECTOR","IS_CANADA","STACKABLE","IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD","isOnCart","window","location","href","includes","isInputEl","isEmptyEl","BASE_API_URL","origin","SHOPPER_ID","replace","REQUEST_URL","appliedPromotion","querySelectorAll","map","elem","parentElement","innerText","codeElem","trim","length","lastResponse","each","code","_removeCode","responseJSON","_parseTotal","originalPrice","workingDiscounts","_applyCode","result","finalPrice","finalDiscount","isValid","status","push","discount","discounts","validationInfo","sort","a","b","currentPrice","currentDiscount","successfulCodes","_getUpdatedCart","fetch","credentials","response","json","_manageCode","bodyData","op","path","headers","body","JSON","stringify","objJSON","total","shoppingBag","charges","subTotal","DriverTemplate","name","stackable","isSinglePageApp","INPUT_EL_SELECTOR","sessionTimer","initialize","actionInterval","timeout","isOnCartUrl","offsetParent","athleta","bananarepublicCanada","bananarepublic","bananarepublicfactory","gap","gapcanada","gapfactory","oldnavyCanada","oldnavy"],"mappings":"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","file":"drivers__gap.bundle.js","sourcesContent":["import bus from '../bus';\nimport { log, format } from '../../utils';\nimport { backgroundMessaging, handleDriverError } from '../lib';\n\nconst { toFloat } = format;\n\nexport default class BaseDriver {\n\t/**\n\t * @function watchForRestoreUserData - set up a listener to check user data restorement\n\t * @emits bus#RestoreUserData - the event that indicates to the app\tthat user data could be restored\n\t */\n\twatchForRestoreUserData(time = 500) {\n\t\tlet pauseInterval = false;\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tconst currentState = await this.checkRestoreDataCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t\tif (currentState) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tbus.$emit('restore-user-data');\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkRestoreDataCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t}, time);\n\n\t\treturn interval;\n\t}\n\n\tcheckRestoreDataCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * @function storeUserData\n\t * @param {String} domain - domain to set the driver storage\n\t * @returns {Promise}\n\t */\n\tasync storeUserData(domain) {\n\t\tconst userData = await this.getUserData();\n\n\t\tif (userData === null) {\n\t\t\t// Nothing to store\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst storageRecord = {\n\t\t\tuserData,\n\t\t\tstoredTime: Date.now(),\n\t\t};\n\t\tbackgroundMessaging.setDriverStorage(userDataKey, storageRecord);\n\t\tlog('Stored user data: %O', storageRecord);\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function restoreUserData\n\t * @param {String} domain - domain to access the driver storage\n\t * @param {Number} [maxStorageLifetime] - optional, the lifetime of the stored data (default 10 mins)\n\t * @returns {Promise}\n\t */\n\tasync restoreUserData(domain, maxStorageLifetime = 600000) {\n\t\tconst userDataKey = this.getUserDataStorageKey(domain);\n\t\tconst driverStorage = await backgroundMessaging.getDriverStorage(userDataKey);\n\n\t\tif (driverStorage) {\n\t\t\tconst { storedTime, userData } = driverStorage;\n\t\t\t// Clear stored user data\n\t\t\tbackgroundMessaging.deleteDriverStorage(userDataKey);\n\n\t\t\tif (Date.now() - storedTime <= maxStorageLifetime) {\n\t\t\t\tlog('Restore user data: %O', userData);\n\t\t\t\treturn this.setUserData(userData);\n\t\t\t}\n\t\t\tlog('User data is outdated, skip restoring');\n\t\t}\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserData - get user data which should be stored\n\t * @returns {Object} - object with required user data which should be restored\n\t */\n\tgetUserData() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function setUserData - restore user data on page\n\t * @param {Object} userData - data which was saved and should be restored\n\t * @returns {Promise}\n\t */\n\tsetUserData() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function getUserDataStorageKey - unique key for storing user data per merchant\n\t * @returns {String}\n\t */\n\tgetUserDataStorageKey(domain) {\n\t\t// Append `_userData` to avoid possible conflicts with created storage from driver\n\t\treturn `${domain}_userData`;\n\t}\n\n\t/**\n\t * Parses start price from page\n\t *\n\t * @function getStartPrice\n\t * @returns {Promise<Number>|Number} - the total from the page\n\t */\n\tgetStartPrice() {\n\t\tlet startPrice = Number.MAX_SAFE_INTEGER;\n\t\tconst totalElementConfig = this.TOTAL_ELEMENT_CONFIG;\n\t\tif (totalElementConfig) {\n\t\t\tconst { selector, attribute, regex } = totalElementConfig;\n\t\t\tlet totalElement;\n\t\t\t// handle case, when there is array of selectors and we try to take totalElement using these selectors in turn\n\t\t\t// for example dell.com, hertz.com\n\t\t\tif (Array.isArray(selector)) {\n\t\t\t\tselector.forEach(elemSelector => {\n\t\t\t\t\tif (!totalElement) {\n\t\t\t\t\t\ttotalElement = document.querySelector(elemSelector);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (typeof selector === 'string') {\n\t\t\t\ttotalElement = document.querySelector(selector);\n\t\t\t} else {\n\t\t\t\thandleDriverError(\n\t\t\t\t\tnew Error(`Total selector type mismatch. Expected string | array, got ${typeof selector}`),\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (totalElement) {\n\t\t\t\tlet value = attribute ? totalElement.getAttribute(attribute) : totalElement.textContent;\n\n\t\t\t\tif (value && regex) {\n\t\t\t\t\t// Set pattern to null to receive error in case pattern was not defined\n\t\t\t\t\t// otherwise we may silently return undefined or empty string\n\t\t\t\t\tconst { pattern = null, group = 0 } = regex;\n\t\t\t\t\tvalue = value.match(pattern)[group];\n\t\t\t\t}\n\t\t\t\tstartPrice = toFloat(value);\n\t\t\t}\n\t\t}\n\t\treturn startPrice;\n\t}\n\n\t/**\n\t * Perform any needed actions and setup to start codes testing\n\t *\n\t * @function beforeTestCodes\n\t *\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @typedef {Object} OriginalData\n\t * @property {Number} originalPrice the starting price for the cart\n\t * @property {Number} originalItemsCount the starting items count of the cart\n\t */\n\t/**\n\t * Perform any needed actions and setup before `checkCodes()` will be executed\n\t *\n\t * @function beforeCheckCodes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tbeforeCheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Perform any needed actions and setup before `applyCodes()` will be executed\n\t *\n\t * @function beforeApplyCodes\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function checkCodes\n\t *\n\t * @param {String[]} codes\n\t * @param {Number} [originalPrice] - optional, the starting price for the cart\n\t * @param {Number} [originalItemsCount] - optional, the starting items count of the cart\n\t * @returns {Promise}\n\t */\n\tcheckCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes each code in @param codes and actually applies it to the cart,\n\t * typically through a fetch(...) call.\n\t *\n\t * @function applyCodes\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tapplyCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function stackCodes\n\t *\n\t * @param {Object} validationInfo - contains all required info passed by `checkCodes()` for codes stacking\n\t * @param {String[]} validationInfo.codes\n\t * @param {Float} [validationInfo.originalPrice]\n\t * @param {Object[]} [validationInfo.discounts] - contains all codes mapped with their discounts\n\t * @returns {Promise}\n\t */\n\tstackCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function removeCodes\n\t *\n\t * @param {String[]} codes - passed in case the driver needs to know specific codes to do removal\n\t * @returns {Promise.<Number>|Promise.<OriginalData>} - optional, a promise which resolves to the original price of the cart\n\t * \t\t\t\t\t\t\t\t\t\t\t\t\t\tor original data which includes originalItemsCount as well\n\t */\n\tremoveCodes() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request response) which are available and were not applied by user\n\t *\n\t * @function getMerchantCodes\n\t * @returns {String[]} - codes from merhcant page (or request response if possible)\n\t */\n\tgetMerchantCodes() {\n\t\treturn [];\n\t}\n\n\t/**\n\t * Takes codes from merchant page (or request) which are available and were applied by user\n\t *\n\t * @typedef {Object} ExistingCodeInfo\n\t * @prop {String[]} codes - list of codes which had been applied, if discoverable\n\t * @prop {Number} codeCount - the number of codes that were applied to the cart\n\t */\n\t/**\n\t * @function getExistingCodes\n\t * @returns {ExistingCodeInfo}\n\t */\n\tgetExistingCodes() {\n\t\treturn {\n\t\t\tcodes: [],\n\t\t\tcodeCount: 0,\n\t\t};\n\t}\n\n\t/**\n\t * Parses pre tax and shipping total from page or request's response\n\t *\n\t * @function getPreTaxShippingTotal\n\t * @returns {Promise<Number>|Number} - the total without tax and shipping\n\t */\n\tgetPreTaxShippingTotal() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @function watchForCartUrl - optional function to set up a listener for url changes on SPAs\n\t * @emits bus#CartActive - the event (using the string 'cart-active') that indicates to the app that test codes button should be shown\n\t * @emits bus#CartInactive - the event (using the string 'cart-inactive') that indicates to the app that test codes button should be hidden\n\t */\n\twatchForCartUrl(time = 500) {\n\t\tlet previousState = null;\n\t\tlet pauseInterval = false;\n\n\t\tconst interval = setInterval(async () => {\n\t\t\tif (!pauseInterval) {\n\t\t\t\tlet currentState = null;\n\t\t\t\ttry {\n\t\t\t\t\t// Pause interval to avoid triggering multiple times `checkCondition`\n\t\t\t\t\t// before the response will be received\n\t\t\t\t\tpauseInterval = true;\n\t\t\t\t\tcurrentState = await this.checkCondition();\n\t\t\t\t\tpauseInterval = false;\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleDriverError(e, { source: 'checkCondition' });\n\t\t\t\t\tclearInterval(interval);\n\t\t\t\t}\n\t\t\t\tif (currentState !== previousState) {\n\t\t\t\t\tbus.$emit(currentState ? 'cart-active' : 'cart-inactive');\n\t\t\t\t}\n\t\t\t\tpreviousState = currentState;\n\t\t\t}\n\t\t}, time);\n\t\t// return the interval to stop it in `watchForCartUrl` if needed from outside\n\t\treturn interval;\n\t}\n\n\t/**\n\t * @function checkCondition - optional function to check for conditions on SPAs\n\t * @returns {Boolean}\n\t */\n\tcheckCondition() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Perform custom completion action on Continue to Checkout button\n\t * Takes best codes in @param codes\n\t *\n\t * @function completeExperience\n\t *\n\t * @param {String[]} codes\n\t * @returns {Promise}\n\t */\n\tcompleteExperience() {\n\t\treturn Promise.resolve();\n\t}\n\n\t/**\n\t * @function completeExperiencePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcompleteExperiencePromisified(...args) {\n\t\treturn this._promisify(this.completeExperience, args);\n\t}\n\n\t/**\n\t * @function beforeCodesTestingPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeTestCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeTestCodes, args);\n\t}\n\n\t/**\n\t * @function getStartPricePromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetStartPricePromisified() {\n\t\treturn this._promisify(this.getStartPrice);\n\t}\n\n\t/**\n\t * @function getMerchantCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetMerchantCodesPromisified(...args) {\n\t\treturn this._promisify(this.getMerchantCodes, args);\n\t}\n\n\t/**\n\t * @function getExistingCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tgetExistingCodesPromisified(...args) {\n\t\treturn this._promisify(this.getExistingCodes, args);\n\t}\n\n\t/**\n\t * @function removeCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tremoveCodesPromisified(...args) {\n\t\treturn this._promisify(this.removeCodes, args);\n\t}\n\n\t/**\n\t * @function beforeApplyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeApplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeApplyCodes, args);\n\t}\n\n\t/**\n\t * @function applyCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tapplyCodesPromisified(...args) {\n\t\treturn this._promisify(this.applyCodes, args);\n\t}\n\n\t/**\n\t * @function beforeCheckCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tbeforeCheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.beforeCheckCodes, args);\n\t}\n\n\t/**\n\t * @function checkCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tcheckCodesPromisified(...args) {\n\t\treturn this._promisify(this.checkCodes, args);\n\t}\n\n\t/**\n\t * @function stackCodesPromisified - promisified wrapper function to guarantee that Promise will be returned (or exception from Promise)\n\t * @returns {Promise}\n\t */\n\tstackCodesPromisified(...args) {\n\t\treturn this._promisify(this.stackCodes, args);\n\t}\n\n\t/**\n\t * @function _promisify - promisifies given method and return it's result as a Promise\n\t * @returns {Promise}\n\t */\n\t_promisify(method, args) {\n\t\treturn Promise.resolve().then(() => method.apply(this, args));\n\t}\n}\n","import Promise from 'bluebird';\nimport bus from '../../bus';\nimport BaseDriver from '../base';\nimport { format, log, browserUtils } from '../../../utils';\n\nconst { toFloat } = format;\nconst { getCookie } = browserUtils;\n\n/**\nDriver behavior description:\n+ Existing code: yes\n+ Remove code: yes\n+ Stackable: yes\n+ Free gift support: no\n+ Free shipping: no\n+ ‘isValid’ implemented: yes\n+ Codes can be replaced by another code: no\n+ Pages, where extension works: cart\n+ Is driver SPA: no\n+ Gather codes on site pages: no\n+ Special case about the driver works (if it needed).\nwe can't support checkout page because can't make request with the same body as on the site\nall drivers from this template are stackable\nthe products can be fetched from different sites of gap or gapcanada\n */\n\nexport default class Driver extends BaseDriver {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.TOTAL_SELECTOR = '.subTotalL.subTotalRight';\n\t\tthis.APPLIED_PROMOTION_SELECTOR = '.applied-promo-code-container .remove-button.invisible';\n\t\tthis.APPLIED_PROMOCODE_SELECTOR = '.applied-promo-code-container .remove-button:not(.invisible)';\n\t\tthis.PROMO_CODE_INPUT_SELECTOR = '.promotion-input';\n\t\tthis.EMPTY_EL_SELECTOR = '.emptyBagSubTotal';\n\n\t\tthis.APPLIED_CODE_SELECTOR = '.applied-promo';\n\n\t\tthis.IS_CANADA = false;\n\t\tthis.STACKABLE = true;\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = false;\n\t}\n\n\tcheckCondition() {\n\t\tconst isOnCart = window.location.href.includes('/buy/shopping_bag.do');\n\t\tconst isInputEl = document.querySelector(this.PROMO_CODE_INPUT_SELECTOR);\n\t\tconst isEmptyEl = document.querySelector(this.EMPTY_EL_SELECTOR);\n\t\tconst currentState = isOnCart && isInputEl && !isEmptyEl;\n\t\treturn currentState;\n\t}\n\n\tbeforeTestCodes() {\n\t\tthis.BASE_API_URL = `${window.location.origin}/buy/resources/shoppingBag/v1`;\n\t\tthis.SHOPPER_ID = getCookie('unknownShopperId').replace('|||', '');\n\t\tthis.REQUEST_URL = `${this.BASE_API_URL}/${this.SHOPPER_ID}`;\n\t}\n\n\tgetExistingCodes() {\n\t\tlet codes = [];\n\t\tconst appliedPromotion = document.querySelector(this.APPLIED_PROMOTION_SELECTOR);\n\t\tif (appliedPromotion) {\n\t\t\tcodes = [...document.querySelectorAll(this.APPLIED_PROMOCODE_SELECTOR)]\n\t\t\t\t.map(elem => elem.parentElement.parentElement)\n\t\t\t\t.map(elem => elem.querySelector(this.APPLIED_CODE_SELECTOR).innerText);\n\t\t} else {\n\t\t\tcodes = [...document.querySelectorAll(this.APPLIED_CODE_SELECTOR)].map(codeElem =>\n\t\t\t\tcodeElem.innerText.trim(),\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\tcodes,\n\t\t\tcodeCount: codes.length,\n\t\t};\n\t}\n\n\tremoveCodes(codes) {\n\t\tlet lastResponse = null;\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._removeCode(code).then(responseJSON => {\n\t\t\t\tlastResponse = responseJSON;\n\t\t\t}),\n\t\t).then(() => this._parseTotal(lastResponse));\n\t}\n\n\tcheckCodes(codes, originalPrice = this._parseTotal()) {\n\t\tconst workingDiscounts = [];\n\t\tlog('originalPrice: %s', originalPrice);\n\t\treturn Promise.each(codes, code =>\n\t\t\tthis._applyCode(code).then(responseJSON => {\n\t\t\t\tconst result = {\n\t\t\t\t\tcode,\n\t\t\t\t\tfinalPrice: originalPrice,\n\t\t\t\t\tfinalDiscount: 0,\n\t\t\t\t\tisValid: true,\n\t\t\t\t};\n\t\t\t\tif (responseJSON.status === 'FAILURE') {\n\t\t\t\t\tresult.isValid = false;\n\t\t\t\t\treturn bus.$emit('code-checked', result);\n\t\t\t\t}\n\n\t\t\t\tresult.finalPrice = this._parseTotal(responseJSON);\n\t\t\t\tresult.finalDiscount = originalPrice - result.finalPrice;\n\n\t\t\t\tif (this.STACKABLE && result.finalPrice < originalPrice) {\n\t\t\t\t\tworkingDiscounts.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn this._removeCode(code).then(() => bus.$emit('code-checked', result));\n\t\t\t}),\n\t\t).then(() => {\n\t\t\tif (this.STACKABLE) {\n\t\t\t\tbus.$emit('stack-codes', {\n\t\t\t\t\tcodes: workingDiscounts.map(discount => discount.code),\n\t\t\t\t\tdiscounts: workingDiscounts,\n\t\t\t\t\toriginalPrice,\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn Promise.resolve();\n\t\t});\n\t}\n\n\tstackCodes(validationInfo) {\n\t\tconst { discounts, originalPrice } = validationInfo;\n\n\t\tdiscounts.sort((a, b) => b.finalDiscount - a.finalDiscount);\n\n\t\tlet currentPrice = originalPrice;\n\t\tlet currentDiscount = 0;\n\t\tconst successfulCodes = [];\n\n\t\treturn Promise.each(discounts, discount =>\n\t\t\tthis._applyCode(discount.code).then(responseJSON => {\n\t\t\t\tconst finalPrice = this._parseTotal(responseJSON);\n\t\t\t\tconst finalDiscount = originalPrice - finalPrice;\n\n\t\t\t\tbus.$emit('code-stacked', {\n\t\t\t\t\tcode: discount.code,\n\t\t\t\t\tfinalPrice,\n\t\t\t\t\tfinalDiscount,\n\t\t\t\t});\n\n\t\t\t\tif (finalPrice < currentPrice) {\n\t\t\t\t\tsuccessfulCodes.push(discount.code);\n\t\t\t\t\tcurrentDiscount = finalDiscount;\n\t\t\t\t\tcurrentPrice = finalPrice;\n\t\t\t\t\treturn Promise.resolve();\n\t\t\t\t}\n\t\t\t\treturn this._removeCode(discount.code);\n\t\t\t}),\n\t\t).then(() =>\n\t\t\tbus.$emit('stackable-complete', {\n\t\t\t\tcodes: successfulCodes,\n\t\t\t\tfinalPrice: currentPrice,\n\t\t\t\tfinalDiscount: currentDiscount,\n\t\t\t}),\n\t\t);\n\t}\n\n\tapplyCodes(codes) {\n\t\treturn this.STACKABLE ? Promise.resolve() : this._applyCode(codes[0]);\n\t}\n\n\tgetPreTaxShippingTotal() {\n\t\tif (this.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD) {\n\t\t\treturn this._getUpdatedCart().then(responseJSON => this._parseTotal(responseJSON));\n\t\t}\n\t\treturn null;\n\t}\n\n\t_getUpdatedCart() {\n\t\treturn fetch(this.REQUEST_URL, {\n\t\t\tmethod: 'GET',\n\t\t\tcredentials: 'include',\n\t\t}).then(response => response.json());\n\t}\n\n\t_applyCode(code) {\n\t\treturn this._manageCode(code, true);\n\t}\n\n\t_removeCode(code) {\n\t\treturn this._manageCode(code);\n\t}\n\n\t_manageCode(code, apply) {\n\t\tif (apply) {\n\t\t\tthis.bodyData = {\n\t\t\t\top: 'apply',\n\t\t\t\tpath: '/shoppingBag/applyPromo',\n\t\t\t\tvalue: code,\n\t\t\t};\n\t\t} else {\n\t\t\tthis.bodyData = {\n\t\t\t\top: 'remove',\n\t\t\t\tpath: `/shoppingBag/removePromo/${code}`,\n\t\t\t};\n\t\t}\n\t\treturn fetch(this.REQUEST_URL, {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'include',\n\t\t\theaders: {\n\t\t\t\t'bag-operation': 'promo',\n\t\t\t\t'content-type': 'application/json-patch+json',\n\t\t\t\t'x-http-method-override': 'PATCH',\n\t\t\t},\n\t\t\tbody: JSON.stringify(this.bodyData),\n\t\t}).then(response => response.json());\n\t}\n\n\t_parseTotal(objJSON) {\n\t\tlet total = null;\n\t\tif (objJSON) {\n\t\t\ttotal = objJSON.shoppingBag.charges.subTotal;\n\t\t\treturn toFloat(this.IS_CANADA ? total.replace('CA', '') : total);\n\t\t}\n\t\ttotal = document.querySelector(this.TOTAL_SELECTOR).innerText;\n\t\treturn toFloat(this.IS_CANADA ? total.replace('CA', '') : total);\n\t}\n}\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = true;\n\t}\n};\n\nexport default {\n\tname: 'Athleta',\n\tdomain: 'athleta.com',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_CANADA = true;\n\t}\n};\n\nexport default {\n\tname: 'Banana Republic Canada',\n\tdomain: 'bananarepublic.ca',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = true;\n\t}\n};\n\nexport default {\n\tname: 'Banana Republic',\n\tdomain: 'bananarepublic.com',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = true;\n\t}\n};\n\nexport default {\n\tname: 'Banana Republic Factory',\n\tdomain: 'bananarepublicfactory.gapfactory.com',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = true;\n\t}\n};\n\nexport default {\n\tname: 'Gap',\n\tdomain: 'gap.com',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_CANADA = true;\n\t}\n};\n\nexport default {\n\tname: 'Gap Canada',\n\tdomain: 'gapcanada.ca',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\nimport { sessionTimer } from '../../lib';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.INPUT_EL_SELECTOR = '.promotion-input';\n\t\tthis.EMPTY_EL_SELECTOR = '.emptyBagSubTotal';\n\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = true;\n\t}\n\n\twatchForCartUrl() {\n\t\tconst interval = super.watchForCartUrl();\n\n\t\tsessionTimer.initialize({\n\t\t\tactionInterval: interval,\n\t\t\ttimeout: 15,\n\t\t});\n\t}\n\n\tcheckCondition() {\n\t\tconst isOnCartUrl = window.location.href.includes('/buy/shopping_bag.do');\n\t\tlet isInputEl = document.querySelector(this.INPUT_EL_SELECTOR);\n\t\tlet isEmptyEl = document.querySelector(this.EMPTY_EL_SELECTOR);\n\t\tisInputEl = isInputEl && isInputEl.offsetParent;\n\t\tisEmptyEl = isEmptyEl && isEmptyEl.offsetParent;\n\n\t\tconst currentState = isOnCartUrl && isInputEl && !isEmptyEl;\n\t\treturn currentState;\n\t}\n};\n\nexport default {\n\tname: 'Gap Factory',\n\tdomain: 'gapfactory.com',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import athleta from './athleta.com';\nimport bananarepublicCanada from './bananarepublic.ca';\nimport bananarepublic from './bananarepublic.com';\nimport bananarepublicfactory from './bananarepublicfactory.com';\nimport gap from './gap.com';\nimport gapcanada from './gapcanada.ca';\nimport gapfactory from './gapfactory.com';\nimport oldnavyCanada from './oldnavy.ca';\nimport oldnavy from './oldnavy.com';\n\nexport default [\n\tathleta,\n\tbananarepublicCanada,\n\tbananarepublic,\n\tbananarepublicfactory,\n\tgap,\n\tgapcanada,\n\tgapfactory,\n\toldnavyCanada,\n\toldnavy,\n];\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_CANADA = true;\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = true;\n\t}\n};\n\nexport default {\n\tname: 'Old Navy Canada',\n\tdomain: 'oldnavy.ca',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n","import DriverTemplate from './_base';\n\nconst Driver = class Driver extends DriverTemplate {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.IS_GET_PRE_TAX_SHIPPING_TOTAL_METHOD = true;\n\t}\n};\n\nexport default {\n\tname: 'Old Navy',\n\tdomain: 'oldnavy.com',\n\tDriver,\n\tstackable: true,\n\tisSinglePageApp: true,\n};\n"],"sourceRoot":""}